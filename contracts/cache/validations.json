{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
<<<<<<< HEAD
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
=======
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:19",
        "version": {
          "withMetadata": "a919126e8026036fc6a050808602e9df51ee660994681b9eaebccaa267f28a64",
          "withoutMetadata": "d4c9f591c51ebfc89a53df3dc6ee9f2bbea79b28fde921580b20bf0834994381",
          "linkedWithoutMetadata": "d4c9f591c51ebfc89a53df3dc6ee9f2bbea79b28fde921580b20bf0834994381"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint32,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256,uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:111"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:114"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:117"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:120"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:123"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:126"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:129"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:132"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:135"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:138"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1914_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:153"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:156"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:159"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:162"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:165"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:168"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1914_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1914_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1914_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "1"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "1"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:19",
        "version": {
          "withMetadata": "04bd6595b5af707dfc45417be85bd5c35daedf1f238f3f379b1ccdcd28d30e1b",
          "withoutMetadata": "940c1ab989bd4e811346d189b76ff7f7aa7730bbd06a50af1cd4f3c24b5ba889",
          "linkedWithoutMetadata": "940c1ab989bd4e811346d189b76ff7f7aa7730bbd06a50af1cd4f3c24b5ba889"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint32,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:111"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:114"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:117"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:120"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:123"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:126"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:129"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:132"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:135"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:138"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1914_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:153"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:156"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:159"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:162"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:165"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:168"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1914_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1914_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1914_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "1"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "1"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:15",
        "version": {
          "withMetadata": "79720d047db008fcd928bc6248a6918702e42b3fad7a87996e04a4bf786b9975",
          "withoutMetadata": "85a449241d0bb61da7f11531288434f15388e25951f3b2e524e0b606497fd12b",
          "linkedWithoutMetadata": "85a449241d0bb61da7f11531288434f15388e25951f3b2e524e0b606497fd12b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint32,uint256,uint32,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint32,uint256,uint256,uint256,uint32)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint32)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint32)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint32,uint256)",
          "calculateTax(uint32,uint256,uint256,uint32)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:106"
            },
            {
              "label": "stakingDuration",
              "offset": 20,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Staking",
              "src": "contracts/Staking.sol:107"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:108"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:109"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:110"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "Staking",
              "src": "contracts/Staking.sol:111"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:112"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:113"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:114"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:115"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:128"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:129"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:130"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:131"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:132"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:133"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1902_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1902_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "1"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "1"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:15",
        "version": {
          "withMetadata": "bf83e9d83cfd060388aa37638fe5511bebc44392a8b61759b950320d8b5deaab",
          "withoutMetadata": "97503e23bd28743b78c11e90ce6a1b12f61c013ec278ba0cac99597fb1d9c663",
          "linkedWithoutMetadata": "97503e23bd28743b78c11e90ce6a1b12f61c013ec278ba0cac99597fb1d9c663"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint32,uint256,uint32,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint32,uint256,uint256,uint256,uint32)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint32)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint32)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint32,uint256)",
          "calculateTax(uint32,uint256,uint256,uint32)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:106"
            },
            {
              "label": "stakingDuration",
              "offset": 20,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Staking",
              "src": "contracts/Staking.sol:107"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:108"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:109"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:110"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "Staking",
              "src": "contracts/Staking.sol:111"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:112"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:113"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:114"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:115"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:128"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:129"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:130"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:131"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:132"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:133"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1902_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1902_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "1"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "1"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:15",
        "version": {
          "withMetadata": "3367bca9488d3104eecc7a39216db382eb95234fc6ecf058cae9a5be6a7dad9b",
          "withoutMetadata": "7ecc98c0d3d483e2be235c64d92f10bff0906eaf391cfb42e0fd41cf552bdd31",
          "linkedWithoutMetadata": "7ecc98c0d3d483e2be235c64d92f10bff0906eaf391cfb42e0fd41cf552bdd31"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint32,uint256,uint32,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint32,uint256,uint256,uint256,uint32)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint32)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint32)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint32,uint256)",
          "calculateTax(uint32,uint256,uint256,uint32)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:106"
            },
            {
              "label": "stakingDuration",
              "offset": 20,
              "slot": "0",
              "type": "t_uint32",
              "contract": "Staking",
              "src": "contracts/Staking.sol:107"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:108"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:109"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:110"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "Staking",
              "src": "contracts/Staking.sol:111"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:112"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:113"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:114"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:115"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:128"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:129"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:130"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:131"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:132"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:133"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1902_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1902_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "1"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "1"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:15",
        "version": {
          "withMetadata": "fbfca04b46619a97eee37295163b0d3e4eacca70d6be99f3361c07735d44047b",
          "withoutMetadata": "9272aea50ad8ba31fff0687c02d95a234def34cde21b0826eb99c6a289656d5a",
          "linkedWithoutMetadata": "9272aea50ad8ba31fff0687c02d95a234def34cde21b0826eb99c6a289656d5a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:106"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:107"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:108"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:109"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:110"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:111"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:112"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:113"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:114"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:115"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:128"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:129"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:130"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:131"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:132"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:133"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1902_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1902_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:15",
        "version": {
          "withMetadata": "d2ff89a6623e6eedcfaf64652adc20734324a6ceef3f9e1bccc7de291972ec77",
          "withoutMetadata": "6b4b11ef092c2268145eb629c5cd3a29223acc156a1464fb989ecc84337c56d3",
          "linkedWithoutMetadata": "6b4b11ef092c2268145eb629c5cd3a29223acc156a1464fb989ecc84337c56d3"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "calculateYield(uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:78"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:79"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:80"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:81"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:82"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:83"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:84"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:85"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:86"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:87"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1790_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:100"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:101"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:102"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:103"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:104"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:105"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1790_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1790_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1790_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:15",
        "version": {
          "withMetadata": "af7f19bc899609ec97a5e94cd8d50a207c6e019f7d8cf136414dfea8ab71ccd4",
          "withoutMetadata": "7b8696324c83f81282468e85fcf2621a6a8fd49aa1890db4e5b2cd30d8e1a9f7",
          "linkedWithoutMetadata": "7b8696324c83f81282468e85fcf2621a6a8fd49aa1890db4e5b2cd30d8e1a9f7"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:106"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:107"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:108"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:109"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:110"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:111"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:112"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:113"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:114"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:115"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:128"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:129"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:130"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:131"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:132"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:133"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1902_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1902_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:15",
        "version": {
          "withMetadata": "6391a1e67171d03def2e1e634f8b808b5090fa3e0b53a297c5f4ca3148ee1dc9",
          "withoutMetadata": "c3b8deaf7a4556b98814d093ee0be5527d6c866eee407ac661a3784f1c515ab1",
          "linkedWithoutMetadata": "c3b8deaf7a4556b98814d093ee0be5527d6c866eee407ac661a3784f1c515ab1"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:106"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:107"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:108"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:109"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:110"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:111"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:112"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:113"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:114"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:115"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:128"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:129"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:130"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:131"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:132"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:133"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1902_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1902_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1902_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "2185702100540d93e1ccd4479bd64dab22dc29efbe700dc4350cf8913090f460",
          "withoutMetadata": "e710a4c50672d0a96127a6b28602b6b7d64b16dfe0bbc6993569c76ee0069362",
          "linkedWithoutMetadata": "e710a4c50672d0a96127a6b28602b6b7d64b16dfe0bbc6993569c76ee0069362"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "b14d0f6ce88206f897d15ffb108d9a9744492e530f7ccdf67f3e3375614b3f86",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "156d9c806bb3a7022407cca666d36bbfc91afaf925783724f0b35fc9ce842235",
          "withoutMetadata": "d49d724220cc49cc86a9185924d309c5bd7d2b6f3b910ccc84c47ba26591e5fe",
          "linkedWithoutMetadata": "d49d724220cc49cc86a9185924d309c5bd7d2b6f3b910ccc84c47ba26591e5fe"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyAdmin",
            "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:17",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:60",
        "version": {
          "withMetadata": "8c6ac39dc26d4502145af22551273366825e95f8096b17be907d9b952f3961b8",
          "withoutMetadata": "5a052efb1d6fd1be06cc8a1da61ac28328a6daa3e2e832c319d992dae6e684a0",
          "linkedWithoutMetadata": "5a052efb1d6fd1be06cc8a1da61ac28328a6daa3e2e832c319d992dae6e684a0"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:77"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_admin",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:65"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
>>>>>>> origin/smart-contract
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
<<<<<<< HEAD
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
=======
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
>>>>>>> origin/smart-contract
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
<<<<<<< HEAD
=======
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "65e0e77e9f9258b4e54d1a00d1ab12db88eb252a2cef8406f710bcbd6a6cc67e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MyProxyAdmin.sol:MyProxyAdmin": {
        "src": "contracts/MyProxyAdmin.sol:10",
        "version": {
          "withMetadata": "126fcfaa6d62333e07d2a61ca86e77e94dedda08ef13ef8088f29f1e9a1ee1f8",
          "withoutMetadata": "f9e82dd5c9911cb0ee920d6136593c7d40f0e510d64bbdb580145b137e85c64e",
          "linkedWithoutMetadata": "f9e82dd5c9911cb0ee920d6136593c7d40f0e510d64bbdb580145b137e85c64e"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MyTransparentUpgradeableProxy.sol:MyTransparentUpgradeableProxy": {
        "src": "contracts/MyTransparentUpgradeableProxy.sol:10",
        "version": {
          "withMetadata": "a882aeed2fb451765768091f82b85b6665b228d733e121719fdbc5d98a21e5cb",
          "withoutMetadata": "1e7417ed809c1a1f76b8f084f044b8fdf404b274827c3dcd15a3e34c5ebebf90",
          "linkedWithoutMetadata": "1e7417ed809c1a1f76b8f084f044b8fdf404b274827c3dcd15a3e34c5ebebf90"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyTransparentUpgradeableProxy",
            "src": "contracts/MyTransparentUpgradeableProxy.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:15",
        "version": {
          "withMetadata": "b02b4fdb1eda9126db83a8480dc4a79422736e0d253934fe656247b5d087cc02",
          "withoutMetadata": "eb4e52003a9cf8914706d69ed288bf839211b573348a0820a2025b8ff34f89c0",
          "linkedWithoutMetadata": "eb4e52003a9cf8914706d69ed288bf839211b573348a0820a2025b8ff34f89c0"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)2268",
              "contract": "Staking",
              "src": "contracts/Staking.sol:106"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:107"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:108"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:109"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:110"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:111"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:112"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:113"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:114"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:115"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)3596_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:128"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:129"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:130"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:131"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:132"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:133"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)2268": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)3596_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)3596_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)3596_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/StakingToken.sol:StakingToken": {
        "src": "contracts/StakingToken.sol:10",
        "version": {
          "withMetadata": "4e163d160b1371677f30759eb12d26498d1cf1833817529d399a72fd2c4aba29",
          "withoutMetadata": "6a40cd57c1abd52863cd12eaf89c1ca76d1ad6b579af8eba33ccd3110f7c5a5e",
          "linkedWithoutMetadata": "6a40cd57c1abd52863cd12eaf89c1ca76d1ad6b579af8eba33ccd3110f7c5a5e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingToken",
            "src": "contracts/StakingToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "7784cb36ab578863fcb8457447d643d9d64101a1b57f52b4ee8e1447fcb7ebac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8190e009429abc9112af0fbdaaee3f41acf4b7cdfb1909858f64f03edacd6a04",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:11",
        "version": {
          "withMetadata": "6a1dcb716ea52fd4cfdbd6b2b9bfe930a8eea7141b9ced3a1ceb38334b15a523",
          "withoutMetadata": "c293f4844f79ea2359c00dfcb212a07b6e88322523a4ea68473a7d965647fc46",
          "linkedWithoutMetadata": "c293f4844f79ea2359c00dfcb212a07b6e88322523a4ea68473a7d965647fc46"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:16"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:18"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:23"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1514_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:36"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:37"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:38"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:39"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:40"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1514_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1514_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1514_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "7784cb36ab578863fcb8457447d643d9d64101a1b57f52b4ee8e1447fcb7ebac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8190e009429abc9112af0fbdaaee3f41acf4b7cdfb1909858f64f03edacd6a04",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:11",
        "version": {
          "withMetadata": "f31d8a4aa8d1c53ecbfa06bee99400dbc03c99edecbea4c237671c0b4a794277",
          "withoutMetadata": "64fa70e4c81513a74fd3d0313169398014d894f586a91f0f0d022c5ca6af6243",
          "linkedWithoutMetadata": "64fa70e4c81513a74fd3d0313169398014d894f586a91f0f0d022c5ca6af6243"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "calculateYield(uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:16"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:18"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:23"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1514_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:36"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:37"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:38"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:39"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:40"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1514_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1514_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1514_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "7784cb36ab578863fcb8457447d643d9d64101a1b57f52b4ee8e1447fcb7ebac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8190e009429abc9112af0fbdaaee3f41acf4b7cdfb1909858f64f03edacd6a04",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:11",
        "version": {
          "withMetadata": "2d7e0334b5dd6340bc93cfedc499c331f6c79c198dd8d65ae93af96fee5e4eaf",
          "withoutMetadata": "64fa70e4c81513a74fd3d0313169398014d894f586a91f0f0d022c5ca6af6243",
          "linkedWithoutMetadata": "64fa70e4c81513a74fd3d0313169398014d894f586a91f0f0d022c5ca6af6243"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256,uint256,uint256,uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "calculateYield(uint256,uint256)",
          "calculateTax(uint256,uint256,uint256,uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:16"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:18"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:23"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1514_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:36"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:37"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:38"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:39"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:40"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1514_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1514_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1514_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "yieldConstant",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "monthlyIncreasePercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startingSlashingPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "6461804f3f2832f165ee7346a8435032010294cc1d484ae969ba7bc2a801a22b",
          "withoutMetadata": "807e442d143dd063ff80a5831f1bc71402f8fc16f009e53b367b5408458a7846",
          "linkedWithoutMetadata": "807e442d143dd063ff80a5831f1bc71402f8fc16f009e53b367b5408458a7846"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "782263662a2451e36708955f6a5897d207cafb58296e055835df5b093b6dda6d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "3e0fc200863cb4c75c9324501de4db7133672d470359dcabc0798b346d3c5b61",
          "withoutMetadata": "b121857fb162d515427b9a379347d98f5c8f73f8aa1f986fd9e738300a51de93",
          "linkedWithoutMetadata": "b121857fb162d515427b9a379347d98f5c8f73f8aa1f986fd9e738300a51de93"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyAdmin",
            "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:17",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:60",
        "version": {
          "withMetadata": "e5204d171bd47f76977298a43231d6347836d0fe9cf1ee6a5a03d915b0ccc620",
          "withoutMetadata": "e5204d171bd47f76977298a43231d6347836d0fe9cf1ee6a5a03d915b0ccc620",
          "linkedWithoutMetadata": "e5204d171bd47f76977298a43231d6347836d0fe9cf1ee6a5a03d915b0ccc620"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:77"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_admin",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:65"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "7784cb36ab578863fcb8457447d643d9d64101a1b57f52b4ee8e1447fcb7ebac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8190e009429abc9112af0fbdaaee3f41acf4b7cdfb1909858f64f03edacd6a04",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "ac60057525ad69f9391e3657a9d03d9ab78f30aa357c7eb350a7ffdfe3b8346f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MyProxyAdmin.sol:MyProxyAdmin": {
        "src": "contracts/MyProxyAdmin.sol:6",
        "version": {
          "withMetadata": "76691dd5c73a1dbe0d4b747443241134437055cc605747bd9508364f7cd177ee",
          "withoutMetadata": "59dd1d7e98f9530a8b38d234be8c5cc7631df77ce03a7e042c5d0b266f37b807",
          "linkedWithoutMetadata": "59dd1d7e98f9530a8b38d234be8c5cc7631df77ce03a7e042c5d0b266f37b807"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MyTransparentUpgradeableProxy.sol:MyTransparentUpgradeableProxy": {
        "src": "contracts/MyTransparentUpgradeableProxy.sol:6",
        "version": {
          "withMetadata": "e57e56c2bec5acfbe7d394fdcbf2e71e8e3e2ce5e2aa7f81f2c60e1ea6d31b74",
          "withoutMetadata": "e57e56c2bec5acfbe7d394fdcbf2e71e8e3e2ce5e2aa7f81f2c60e1ea6d31b74",
          "linkedWithoutMetadata": "e57e56c2bec5acfbe7d394fdcbf2e71e8e3e2ce5e2aa7f81f2c60e1ea6d31b74"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyTransparentUpgradeableProxy",
            "src": "contracts/MyTransparentUpgradeableProxy.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:11",
        "version": {
          "withMetadata": "4dfd6793b9d8014a76272cc5e9aec0a9b8c90143caf48ee209e91e4afb0a5344",
          "withoutMetadata": "fa0845a9233e4fc543a5799b6eb818388fc41c88d41941630e8e5473de9af407",
          "linkedWithoutMetadata": "fa0845a9233e4fc543a5799b6eb818388fc41c88d41941630e8e5473de9af407"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "calculateYield(uint256)",
          "calculateTax(uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)2268",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:16"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:18"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:23"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)3092_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:32"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:33"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:34"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:35"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:36"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)2268": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)3092_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)3092_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)3092_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/StakingToken.sol:StakingToken": {
        "src": "contracts/StakingToken.sol:6",
        "version": {
          "withMetadata": "2ea8b0b1055b4c6091d14db029ece3cfbbe0abf316ae95f0ee14e99152969c6b",
          "withoutMetadata": "b7dd4642f5aac7a63789a8579724d5ff563cb1c8816ed3175d2e87867304201a",
          "linkedWithoutMetadata": "b7dd4642f5aac7a63789a8579724d5ff563cb1c8816ed3175d2e87867304201a"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingToken",
            "src": "contracts/StakingToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "7784cb36ab578863fcb8457447d643d9d64101a1b57f52b4ee8e1447fcb7ebac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8190e009429abc9112af0fbdaaee3f41acf4b7cdfb1909858f64f03edacd6a04",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:11",
        "version": {
          "withMetadata": "352a3ef6e5b24a144a0a64ae2428488f1601826ddbe06d76abc3d47e7ee49833",
          "withoutMetadata": "fa0845a9233e4fc543a5799b6eb818388fc41c88d41941630e8e5473de9af407",
          "linkedWithoutMetadata": "fa0845a9233e4fc543a5799b6eb818388fc41c88d41941630e8e5473de9af407"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "calculateYield(uint256)",
          "calculateTax(uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:16"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:18"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:23"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1506_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:32"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:33"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:34"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:35"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:36"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1506_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1506_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1506_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "6461804f3f2832f165ee7346a8435032010294cc1d484ae969ba7bc2a801a22b",
          "withoutMetadata": "807e442d143dd063ff80a5831f1bc71402f8fc16f009e53b367b5408458a7846",
          "linkedWithoutMetadata": "807e442d143dd063ff80a5831f1bc71402f8fc16f009e53b367b5408458a7846"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "782263662a2451e36708955f6a5897d207cafb58296e055835df5b093b6dda6d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "3e0fc200863cb4c75c9324501de4db7133672d470359dcabc0798b346d3c5b61",
          "withoutMetadata": "b121857fb162d515427b9a379347d98f5c8f73f8aa1f986fd9e738300a51de93",
          "linkedWithoutMetadata": "b121857fb162d515427b9a379347d98f5c8f73f8aa1f986fd9e738300a51de93"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyAdmin",
            "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:17",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:60",
        "version": {
          "withMetadata": "e5204d171bd47f76977298a43231d6347836d0fe9cf1ee6a5a03d915b0ccc620",
          "withoutMetadata": "e5204d171bd47f76977298a43231d6347836d0fe9cf1ee6a5a03d915b0ccc620",
          "linkedWithoutMetadata": "e5204d171bd47f76977298a43231d6347836d0fe9cf1ee6a5a03d915b0ccc620"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:77"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_admin",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:65"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8190e009429abc9112af0fbdaaee3f41acf4b7cdfb1909858f64f03edacd6a04",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "ac60057525ad69f9391e3657a9d03d9ab78f30aa357c7eb350a7ffdfe3b8346f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MyProxyAdmin.sol:MyProxyAdmin": {
        "src": "contracts/MyProxyAdmin.sol:6",
        "version": {
          "withMetadata": "0a411923f75bc38096aae6a2a58a81fe23263c77197c0202dc1902131d8b0126",
          "withoutMetadata": "59dd1d7e98f9530a8b38d234be8c5cc7631df77ce03a7e042c5d0b266f37b807",
          "linkedWithoutMetadata": "59dd1d7e98f9530a8b38d234be8c5cc7631df77ce03a7e042c5d0b266f37b807"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MyTransparentUpgradeableProxy.sol:MyTransparentUpgradeableProxy": {
        "src": "contracts/MyTransparentUpgradeableProxy.sol:6",
        "version": {
          "withMetadata": "0b51c66dc4d79a7934683bc10389177c615bc68f8e4c32e2fe7720c5b7e6f2a2",
          "withoutMetadata": "0b51c66dc4d79a7934683bc10389177c615bc68f8e4c32e2fe7720c5b7e6f2a2",
          "linkedWithoutMetadata": "0b51c66dc4d79a7934683bc10389177c615bc68f8e4c32e2fe7720c5b7e6f2a2"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyTransparentUpgradeableProxy",
            "src": "contracts/MyTransparentUpgradeableProxy.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:14",
        "version": {
          "withMetadata": "b117ec3c287173ed3166fa464ffd50ecfdc5cee9fe8ab8def4f106a57b61921c",
          "withoutMetadata": "fa56d85d6ff69f86b1f379a6f74c170906267aae65b058f3a29b23e3ed45951f",
          "linkedWithoutMetadata": "fa56d85d6ff69f86b1f379a6f74c170906267aae65b058f3a29b23e3ed45951f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256)",
          "calculateTax(uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)877",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:30"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:33"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:36"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:39"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:42"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:45"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:48"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)933_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:58"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:59"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:60"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:61"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:62"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)877": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)933_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)933_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)933_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
>>>>>>> origin/smart-contract
      "contracts/Staking.sol:Staking": {
        "src": "contracts\\Staking.sol:14",
        "version": {
          "withMetadata": "367f12387e32c44d3db788ee55c523e0338ccf116db5f1b36a6904cc1006af64",
          "withoutMetadata": "9b0bbb766d6cfa49126eaca16d3981532740bca91e359e1d55ae8f82db2f4d3a",
          "linkedWithoutMetadata": "9b0bbb766d6cfa49126eaca16d3981532740bca91e359e1d55ae8f82db2f4d3a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256)",
          "calculateTax(uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)",
          "getUserStakes(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)1529",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:21"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:24"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:27"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:30"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:33"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:36"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:39"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:42"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:45"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:48"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1641_storage))",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:57"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:58"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:59"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:60"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:61"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\Staking.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)1529": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1641_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1641_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1641_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/StakingToken.sol:StakingToken": {
        "src": "contracts\\StakingToken.sol:7",
        "version": {
          "withMetadata": "da9c8c6d1f5a7009d6bd507e7608a68fc7c38a77750bba706e2e601bfd9a6dfd",
          "withoutMetadata": "b7dd4642f5aac7a63789a8579724d5ff563cb1c8816ed3175d2e87867304201a",
          "linkedWithoutMetadata": "b7dd4642f5aac7a63789a8579724d5ff563cb1c8816ed3175d2e87867304201a"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingToken",
            "src": "contracts\\StakingToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:14",
        "version": {
          "withMetadata": "45db320cd56586530f054588340159e97e1742d3ca25eae6fdef5f7a86c11d1c",
          "withoutMetadata": "9b0bbb766d6cfa49126eaca16d3981532740bca91e359e1d55ae8f82db2f4d3a",
          "linkedWithoutMetadata": "9b0bbb766d6cfa49126eaca16d3981532740bca91e359e1d55ae8f82db2f4d3a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,uint256,uint256,uint256,uint256)",
          "stake(uint256)",
          "unstake(uint256)",
          "claim(uint256)",
          "calculateTotalWithdraw(uint256,uint256)",
          "totalStaked()",
          "pendingRewards()",
          "rewardPool()",
          "pause()",
          "unpause()",
          "updateStakingDuration(uint256)",
          "updateMinCap(uint256)",
          "updateMaxCap(uint256)",
          "updateYieldConstant(uint256)",
          "updateCooldownPeriod(uint256)",
          "updateStartingSlashingPoint(uint256)",
          "updateMonthlyIncreasePercentage(uint256)",
          "calculateYield(uint256)",
          "calculateTax(uint256)",
          "enableWhitelist()",
          "disableWhitelist()",
          "addToWhitelist(address)",
          "removeFromWhitelist(address)",
          "depositRewardTokens(uint256)",
          "withdrawRewardTokens(uint256)",
          "getTotalStakedForUser(address)",
          "getUserStakes(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)1529",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "stakingDuration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "minCap",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "maxCap",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:30"
            },
            {
              "label": "yieldConstant",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:33"
            },
            {
              "label": "cooldownPeriod",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:36"
            },
            {
              "label": "monthsInStakingPeriod",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:39"
            },
            {
              "label": "startingSlashingPoint",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:42"
            },
            {
              "label": "monthlyIncreasePercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:45"
            },
            {
              "label": "whitelistEnabled",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:48"
            },
            {
              "label": "userStakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1641_storage))",
              "contract": "Staking",
              "src": "contracts/Staking.sol:57"
            },
            {
              "label": "userStakeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:58"
            },
            {
              "label": "whitelistedAddresses",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:59"
            },
            {
              "label": "_totalStaked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:60"
            },
            {
              "label": "_rewardPool",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:61"
            },
            {
              "label": "_totalPendingRewards",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)138_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)202_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IERC20)1529": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)1641_storage))": {
              "label": "mapping(address => mapping(uint256 => struct Staking.Stake))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Stake)1641_storage)": {
              "label": "mapping(uint256 => struct Staking.Stake)",
              "numberOfBytes": "32"
            },
            "t_struct(Stake)1641_storage": {
              "label": "struct Staking.Stake",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "requestUnstakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeRequested",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/StakingToken.sol:StakingToken": {
        "src": "contracts/StakingToken.sol:7",
        "version": {
          "withMetadata": "3cb08d6d781a0971bc3b7e0196cdb622d733f6a907bf75716753697c77ccb0da",
          "withoutMetadata": "b7dd4642f5aac7a63789a8579724d5ff563cb1c8816ed3175d2e87867304201a",
          "linkedWithoutMetadata": "b7dd4642f5aac7a63789a8579724d5ff563cb1c8816ed3175d2e87867304201a"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StakingToken",
            "src": "contracts/StakingToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}