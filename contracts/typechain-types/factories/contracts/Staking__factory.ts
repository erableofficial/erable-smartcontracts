/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnstakeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "WhitelistStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
    ],
    name: "calculateTotalWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalStakedForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyIncreasePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthsInStakingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startingSlashingPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
    ],
    name: "updateCooldownPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
    ],
    name: "updateMaxCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minCap",
        type: "uint256",
      },
    ],
    name: "updateMinCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
    ],
    name: "updateMonthlyIncreasePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "updateStakingDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
    ],
    name: "updateStartingSlashingPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
    ],
    name: "updateYieldConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakeCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestUnstakeTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unstakeRequested",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldConstant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611903806100206000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c806372f702f31161013b578063b5d5b5fa116100b8578063d6b0f4841161007c578063d6b0f4841461051c578063e43252d714610524578063e6d2486614610537578063e81ba0801461054a578063f2fde38b1461055d57600080fd5b8063b5d5b5fa14610476578063bcaabf6c146104db578063cb43b2dd146104ee578063cdfb2b4e14610501578063d2771e011461050957600080fd5b8063861f6bfd116100ff578063861f6bfd146103fa5780638ab1d6811461040d5780638da5cb5b14610420578063a694fc3a14610450578063b3c557211461046357600080fd5b806372f702f3146103ad5780637a65cd0b146103d85780638005a7de146103e1578063817b1cd2146103ea5780638456cb59146103f257600080fd5b80633f4ba83a116101c95780635b1d70861161018d5780635b1d7086146103695780635c975abb1461037c57806366666aa9146103945780636f6295121461039c578063715018a6146103a557600080fd5b80633f4ba83a146103185780633fa615b01461032057806345ff4c801461032957806351fb012d1461033c5780635678b0241461034957600080fd5b8063291614791161021057806329161479146102c35780632e17de78146102cc57806336c1105a146102df578063379607f5146102f25780633b42ffcf1461030557600080fd5b806304646a491461024d57806306c933d8146102695780630b7ead4a1461029c57806316c621e0146102a557806323548b8b146102ba575b600080fd5b61025660055481565b6040519081526020015b60405180910390f35b61028c610277366004611713565b600c6020526000908152604090205460ff1681565b6040519015158152602001610260565b61025660075481565b6102b86102b336600461172e565b610570565b005b61025660035481565b61025660085481565b6102b86102da36600461172e565b61068c565b6102b86102ed36600461172e565b610967565b6102b861030036600461172e565b610974565b610256610313366004611713565b610a65565b6102b8610ad3565b61025660025481565b6102b8610337366004611747565b610ae5565b60095461028c9060ff1681565b610256610357366004611713565b600b6020526000908152604090205481565b6102b861037736600461172e565b610c77565b60008051602061188e8339815191525460ff1661028c565b600e54610256565b61025660065481565b6102b8610cb8565b6000546103c0906001600160a01b031681565b6040516001600160a01b039091168152602001610260565b61025660045481565b61025660015481565b600d54610256565b6102b8610cca565b6102b861040836600461172e565b610cda565b6102b861041b366004611713565b610ce7565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166103c0565b6102b861045e36600461172e565b610d3e565b6102b861047136600461172e565b61102c565b6104b9610484366004611791565b600a60209081526000928352604080842090915290825290208054600182015460028301546003909301549192909160ff1684565b6040805194855260208501939093529183015215156060820152608001610260565b6102b86104e936600461172e565b611039565b6102b86104fc36600461172e565b611046565b6102b86111a3565b6102566105173660046117bb565b6111ba565b6102b8611298565b6102b8610532366004611713565b6112ac565b6102b861054536600461172e565b61130b565b6102b861055836600461172e565b611318565b6102b861056b366004611713565b611325565b610578611360565b600081116105c05760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f74206465706f73697420360841b60448201526064015b60405180910390fd5b80600e60008282546105d291906117f3565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561062e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106529190611806565b5060405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020015b60405180910390a250565b6106946113bb565b336000908152600a60209081526040808320848452909152902080546107085760405162461bcd60e51b815260206004820152602360248201527f4e6f207374616b656420616d6f756e7420746f207265717565737420756e7374604482015262616b6560e81b60648201526084016105b7565b600381015460ff161561075d5760405162461bcd60e51b815260206004820152601960248201527f556e7374616b6520616c7265616479207265717565737465640000000000000060448201526064016105b7565b805460015460009081036107865761077f828460010154426105179190611828565b9050610810565b600154836001015461079891906117f3565b4210156107f95742600284015560038301805460ff19166001179055825460405133917f828764c21e74c28710e19919735825aba966621c95cbd913f8ed65a2d298f48c916107e991815260200190565b60405180910390a250505061094d565b61080d828460010154426105179190611828565b90505b81600d60008282546108229190611828565b9091555061083290508282611828565b600e60008282546108439190611828565b9091555050336000818152600a602090815260408083208884529091528082208281556001810183905560028101839055600301805460ff191690559054905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190611806565b5060405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a261093133610a65565b60000361094957336000908152600b60205260408120555b5050505b61096460016000805160206118ae83398151915255565b50565b61096f611360565b600455565b61097c6113bb565b610984611407565b336000908152600a602090815260408083208484529091529020600381015460ff166109ea5760405162461bcd60e51b8152602060048201526015602482015274155b9cdd185ad9481b9bdd081c995c5d595cdd1959605a1b60448201526064016105b7565b60055481600201546109fc91906117f3565b421015610a4b5760405162461bcd60e51b815260206004820152601860248201527f436f6f6c646f776e20706572696f64206e6f74206f766572000000000000000060448201526064016105b7565b8054600182015460009061080d9083906105179042611828565b600080805b6001600160a01b0384166000908152600b6020526040902054811015610acc576001600160a01b0384166000908152600a60209081526040808320848452909152902054610ab890836117f3565b915080610ac48161183b565b915050610a6a565b5092915050565b610adb611360565b610ae3611438565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610b2b5750825b905060008267ffffffffffffffff166001148015610b485750303b155b905081158015610b56575080155b15610b745760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610b9e57845460ff60401b1916600160401b1785555b610ba733611498565b610baf6114a9565b610bb76114b9565b600080546001600160a01b0319166001600160a01b038d1617815560018b9055600281905560035560048990556005889055603c806018610bf9601e8e611854565b610c039190611854565b610c0d9190611854565b610c179190611854565b600655600787905560088690558315610c6a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b610c7f611360565b6001819055603c806018610c94601e85611854565b610c9e9190611854565b610ca89190611854565b610cb29190611854565b60065550565b610cc0611360565b610ae360006114c9565b610cd2611360565b610ae361153a565b610ce2611360565b600555565b610cef611360565b6001600160a01b0381166000818152600c60209081526040808320805460ff19169055519182527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d9101610681565b610d466113bb565b610d4e611407565b60095460ff161580610d6f5750336000908152600c602052604090205460ff165b610dbb5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206e6f742077686974656c697374656400000000000000000060448201526064016105b7565b60008111610dfc5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b60448201526064016105b7565b60025415610e5657600254811015610e565760405162461bcd60e51b815260206004820152601860248201527f416d6f756e742062656c6f77206d696e696d756d20636170000000000000000060448201526064016105b7565b60035415610ec257600354610e6a33610a65565b610e7490836117f3565b1115610ec25760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742065786365656473206d6178696d756d2063617000000000000060448201526064016105b7565b336000818152600b602081815260408084208054825160808101845288815242818601908152818501888152606083018981528a8a52600a8852868a20858b528852958920835181559151600183015551600282015593516003909401805460ff1916941515949094179093559585529290915281549092909190610f468361183b565b919050555082600d6000828254610f5d91906117f3565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd9190611806565b5060405183815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a2505061096460016000805160206118ae83398151915255565b611034611360565b600855565b611041611360565b600255565b61104e611360565b600081116110925760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b60448201526064016105b7565b80600e5410156110e45760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820746f6b656e7320696e2072657761726420706f6f6c60448201526064016105b7565b80600e60008282546110f69190611828565b909155505060005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561114c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111709190611806565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436490602001610681565b6111ab611360565b6009805460ff19166001179055565b6000806111c683611583565b905060006111d38461160e565b90506000670de0b6b3a76400006111ea8488611876565b6111f49190611854565b90506000670de0b6b3a764000061120b8484611876565b6112159190611854565b9050600081611224848a6117f3565b61122e9190611828565b905061123a8284611828565b600e54101561128b5760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e742072657761726420706f6f6c000000000000000060448201526064016105b7565b9450505050505b92915050565b6112a0611360565b6009805460ff19169055565b6112b4611360565b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916600190811790915591519182527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d9101610681565b611313611360565b600755565b611320611360565b600355565b61132d611360565b6001600160a01b03811661135757604051631e4fbdf760e01b8152600060048201526024016105b7565b610964816114c9565b336113927f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610ae35760405163118cdaa760e01b81523360048201526024016105b7565b6000805160206118ae8339815191528054600119016113ed57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b60016000805160206118ae83398151915255565b60008051602061188e8339815191525460ff1615610ae35760405163d93c066560e01b815260040160405180910390fd5b611440611652565b60008051602061188e833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b6114a0611682565b610964816116cb565b6114b1611682565b610ae36116d3565b6114c1611682565b610ae36116f4565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b611542611407565b60008051602061188e833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583361147a565b6000600154821061159c57600454611292906090611876565b60006301e133806115ae84600c611876565b6115c090670de0b6b3a7640000611876565b6115ca9190611854565b905060006ec097ce7bc90715b34b9f100000000082836004546115ed9190611876565b6115f79190611876565b6116019190611854565b949350505050565b919050565b6000600154821061162157506000919050565b6000600154836008546116349190611876565b61163e9190611854565b60075461164b9190611828565b9392505050565b60008051602061188e8339815191525460ff16610ae357604051638dfc202b60e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610ae357604051631afcd79f60e31b815260040160405180910390fd5b61132d611682565b6116db611682565b60008051602061188e833981519152805460ff19169055565b6113f3611682565b80356001600160a01b038116811461160957600080fd5b60006020828403121561172557600080fd5b61164b826116fc565b60006020828403121561174057600080fd5b5035919050565b60008060008060008060c0878903121561176057600080fd5b611769876116fc565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b600080604083850312156117a457600080fd5b6117ad836116fc565b946020939093013593505050565b600080604083850312156117ce57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b80820180821115611292576112926117dd565b60006020828403121561181857600080fd5b8151801515811461164b57600080fd5b81810381811115611292576112926117dd565b60006001820161184d5761184d6117dd565b5060010190565b60008261187157634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417611292576112926117dd56fecd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220de2092f45a71165d453044e2ac7f43495c5266a711e88cc44624a36166b2333964736f6c63430008140033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
