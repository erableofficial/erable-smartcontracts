/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "YIELD_CONSTANT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "calculateTotalWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161088e38038061088e83398101604081905261002f916100d8565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610088565b50600180546001600160a01b0319166001600160a01b039390931692909217909155600255610112565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100eb57600080fd5b82516001600160a01b038116811461010257600080fd5b6020939093015192949293505050565b61076d806101216000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638005a7de116100715780638005a7de146101105780638da5cb5b146101195780638da7ad231461012a578063a694fc3a14610166578063d2771e0114610179578063f2fde38b1461018c57600080fd5b806318160ddd146100ae5780633ccfd60b146100c557806356f7b91c146100cf578063715018a6146100dd57806372f702f3146100e5575b600080fd5b6004545b6040519081526020015b60405180910390f35b6100cd61019f565b005b6100b26602d79883d2000081565b6100cd6102e3565b6001546100f8906001600160a01b031681565b6040516001600160a01b0390911681526020016100bc565b6100b260025481565b6000546001600160a01b03166100f8565b610151610138366004610635565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152016100bc565b6100cd610174366004610665565b6102f7565b6100b261018736600461067e565b610431565b6100cd61019a366004610635565b61057a565b33600090815260036020526040902080546102015760405162461bcd60e51b815260206004820152601c60248201527f4e6f207374616b656420616d6f756e7420746f2077697468647261770000000060448201526064015b60405180910390fd5b80546001820154600090610216908390610431565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028c91906106a0565b506000808455600480548492906102a49084906106d8565b909155505060405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505050565b6102eb6105b8565b6102f560006105e5565b565b600081116103385760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b60448201526064016101f8565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561038f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b391906106a0565b5060408051808201825282815242602080830191825233600090815260039091529283209151825551600190910155600480548392906103f49084906106eb565b909155505060405181815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a250565b6000806201518061044284426106d8565b61044c91906106fe565b9050600061016d61045e83600c610720565b61047090670de0b6b3a7640000610720565b61047a91906106fe565b905060008061016d84106104a55761049a6602d79883d200006090610720565b915060009050610511565b6ec097ce7bc90715b34b9f1000000000836104c7816602d79883d20000610720565b6104d19190610720565b6104db91906106fe565b915061016d6104f2856706a94d74f4300000610720565b6104fc91906106fe565b61050e90670853a0d2313c00006106d8565b90505b6000670de0b6b3a7640000610526848a610720565b61053091906106fe565b90506000670de0b6b3a76400006105478484610720565b61055191906106fe565b9050600081610560848c6106eb565b61056a91906106d8565b9750505050505050505b92915050565b6105826105b8565b6001600160a01b0381166105ac57604051631e4fbdf760e01b8152600060048201526024016101f8565b6105b5816105e5565b50565b6000546001600160a01b031633146102f55760405163118cdaa760e01b81523360048201526024016101f8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561064757600080fd5b81356001600160a01b038116811461065e57600080fd5b9392505050565b60006020828403121561067757600080fd5b5035919050565b6000806040838503121561069157600080fd5b50508035926020909101359150565b6000602082840312156106b257600080fd5b8151801515811461065e57600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610574576105746106c2565b80820180821115610574576105746106c2565b60008261071b57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610574576105746106c256fea264697066735822122026437b5d5cf34f90414ba5f85e150789f523949af18073cf0b036a4acea76a1164736f6c63430008140033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stakingToken: AddressLike,
    _stakingDuration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _stakingToken,
      _stakingDuration,
      overrides || {}
    );
  }
  override deploy(
    _stakingToken: AddressLike,
    _stakingDuration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _stakingToken,
      _stakingDuration,
      overrides || {}
    ) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
