/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountBelowMinCap",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountExceedsMaxCap",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotDepositZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CooldownPeriodNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientRewardPool",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NoStakedAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWhitelisted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "UnstakeAlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "UnstakeNotRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnstakeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "WhitelistStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "calculateTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "calculateTotalWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "calculateYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalStakedForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_stakingDuration",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_whitelistEnabled",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyIncreasePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthsInStakingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startingSlashingPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
    ],
    name: "updateCooldownPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
    ],
    name: "updateMaxCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minCap",
        type: "uint256",
      },
    ],
    name: "updateMinCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
    ],
    name: "updateMonthlyIncreasePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "updateStakingDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
    ],
    name: "updateStartingSlashingPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
    ],
    name: "updateYieldConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakeCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "requestUnstakeTime",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "unstakeRequested",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "monthlyIncreasePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "stakingDuration",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldConstant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506144fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c8063715018a611610151578063b3c55721116100c3578063d6b0f48411610087578063d6b0f484146106e1578063e43252d7146106eb578063e6d2486614610707578063e81ba08014610723578063eded3fda1461073f578063f2fde38b1461075d57610269565b8063b3c557211461064c578063b5d5b5fa14610668578063bcaabf6c1461069f578063cb43b2dd146106bb578063cdfb2b4e146106d757610269565b8063817b1cd211610115578063817b1cd2146105b25780638456cb59146105d0578063861f6bfd146105da5780638ab1d681146105f65780638da5cb5b14610612578063a694fc3a1461063057610269565b8063715018a61461051e57806372f702f31461052857806375713079146105465780637a65cd0b146105765780638005a7de1461059457610269565b8063379607f5116101ea5780635678b024116101ae5780635678b0241461045c5780635b1d70861461048c5780635c975abb146104a857806366666aa9146104c65780636c03d853146104e45780636f6295121461050057610269565b8063379607f5146103ca5780633b42ffcf146103e65780633f4ba83a146104165780633fa615b01461042057806351fb012d1461043e57610269565b80632319b256116102315780632319b2561461032657806323548b8b1461035657806329161479146103745780632e17de781461039257806336c1105a146103ae57610269565b806304646a491461026e57806306c933d81461028c5780630b7ead4a146102bc57806316c621e0146102da57806322e76837146102f6575b600080fd5b610276610779565b6040516102839190613c10565b60405180910390f35b6102a660048036038101906102a19190613c8e565b61077f565b6040516102b39190613cd6565b60405180910390f35b6102c461079f565b6040516102d19190613c10565b60405180910390f35b6102f460048036038101906102ef9190613d1d565b6107a5565b005b610310600480360381019061030b9190613d4a565b6109a2565b60405161031d9190613c10565b60405180910390f35b610340600480360381019061033b9190613dd7565b610b3a565b60405161034d9190613c10565b60405180910390f35b61035e610ccd565b60405161036b9190613c10565b60405180910390f35b61037c610cd3565b6040516103899190613c10565b60405180910390f35b6103ac60048036038101906103a79190613d1d565b610cd9565b005b6103c860048036038101906103c39190613d1d565b6110c8565b005b6103e460048036038101906103df9190613d1d565b61112a565b005b61040060048036038101906103fb9190613c8e565b611399565b60405161040d9190613c10565b60405180910390f35b61041e611581565b005b6104286115f7565b6040516104359190613c10565b60405180910390f35b6104466115fd565b6040516104539190613cd6565b60405180910390f35b61047660048036038101906104719190613c8e565b611610565b6040516104839190613c10565b60405180910390f35b6104a660048036038101906104a19190613d1d565b611628565b005b6104b06116b3565b6040516104bd9190613cd6565b60405180910390f35b6104ce6116d8565b6040516104db9190613c10565b60405180910390f35b6104fe60048036038101906104f99190613e92565b61171e565b005b610508611b1f565b6040516105159190613c10565b60405180910390f35b610526611b25565b005b610530611b39565b60405161053d9190613fd0565b60405180910390f35b610560600480360381019061055b9190613feb565b611b5d565b60405161056d9190613c10565b60405180910390f35b61057e611c7e565b60405161058b9190613c10565b60405180910390f35b61059c611c84565b6040516105a99190613c10565b60405180910390f35b6105ba611c8a565b6040516105c79190613c10565b60405180910390f35b6105d8611cd0565b005b6105f460048036038101906105ef9190613d1d565b611d46565b005b610610600480360381019061060b9190613c8e565b611da8565b005b61061a611ed2565b6040516106279190614061565b60405180910390f35b61064a60048036038101906106459190613d1d565b611f0a565b005b61066660048036038101906106619190613d1d565b6126ac565b005b610682600480360381019061067d919061407c565b61270e565b6040516106969897969594939291906140cb565b60405180910390f35b6106b960048036038101906106b49190613d1d565b6127a0565b005b6106d560048036038101906106d09190613d1d565b612802565b005b6106df612aaa565b005b6106e9612b1f565b005b61070560048036038101906107009190613c8e565b612b94565b005b610721600480360381019061071c9190613d1d565b612cbe565b005b61073d60048036038101906107389190613d1d565b612d20565b005b610747612d82565b6040516107549190613c10565b60405180910390f35b61077760048036038101906107729190613c8e565b612dc8565b005b60055481565b600c6020528060005260406000206000915054906101000a900460ff1681565b60075481565b6107b967784d1203cac2db3660c01b612e4e565b6107c1612e51565b6107d567cc7f46c4c4f181c560c01b612e4e565b6107e967371e6d56b832698160c01b612e4e565b6107fd672e31e54c0ede5a3860c01b612e4e565b61081167f9703c94a5a19bd460c01b612e4e565b600081036108735761082d679e220b7e5f7608a560c01b612e4e565b61084167fe7caa985572d08f60c01b612e4e565b6040517f61ac6eba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61088767ccd960eba84e13dd60c01b612e4e565b61089b678605a2b21344c35760c01b612e4e565b80600e60008282546108ad9190614178565b925050819055506108c8672acfe9baee32783060c01b612e4e565b6108dc672e0b79933dc999ef60c01b612e4e565b61092933308360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612ed8909392919063ffffffff16565b61093d67bba26dbe923896e060c01b612e4e565b610951677f25a147d236dd8b60c01b612e4e565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c826040516109979190613c10565b60405180910390a250565b60006109b86771dc132d31e4a02460c01b612e4e565b6109cc67a7d8e1cbbc843fb260c01b612e4e565b6109e0675fb82d64c9d3c40a60c01b612e4e565b60006109ed878785610b3a565b9050610a0367bf3e5f3fd52b5fb960c01b612e4e565b610a1767e12bd3823173100d60c01b612e4e565b6000610a2588878787611b5d565b9050610a3b67acece777c90a6bb760c01b612e4e565b610a4f67ac5b4b7a00dd959d60c01b612e4e565b6000670de0b6b3a7640000838b610a6691906141ac565b610a70919061421d565b9050610a86671d7e0721221a2ef660c01b612e4e565b610a9a676cec70fe82fb1ddb60c01b612e4e565b6000670de0b6b3a76400008383610ab191906141ac565b610abb919061421d565b9050610ad167ffbd9af4813c716760c01b612e4e565b610ae5676208b8f23c1ee9d560c01b612e4e565b600081838d610af49190614178565b610afe919061424e565b9050610b14674bc5cceccd8f3b8f60c01b612e4e565b610b2867cc0d02e223ac5f2060c01b612e4e565b80955050505050509695505050505050565b6000610b5067d3533c0d788f6f6a60c01b612e4e565b610b6467c6c49d372d30d9e060c01b612e4e565b610b78673a7cb5c767023a9a60c01b612e4e565b818410610bcf57610b9367cfb62a4e3282757460c01b612e4e565b610ba767f271e827db6e47b760c01b612e4e565b610bbb67a33c765d60246bf760c01b612e4e565b826090610bc891906141ac565b9050610cc6565b610be3675dcec27c27302b3160c01b612e4e565b610bf767996f014a15ae084b60c01b612e4e565b610c0b6709e7bdd9574ac5a060c01b612e4e565b600082670de0b6b3a764000086600654610c2591906141ac565b610c2f91906141ac565b610c39919061421d565b9050610c4f6741ae4d463ca3cf4960c01b612e4e565b610c6367581f33e234bdd4ae60c01b612e4e565b60006ec097ce7bc90715b34b9f1000000000828387610c8291906141ac565b610c8c91906141ac565b610c96919061421d565b9050610cac67d425252e50b3a3f360c01b612e4e565b610cc06737dc5191926dd1c460c01b612e4e565b80925050505b9392505050565b60035481565b60085481565b610ced679f9dd50f21c5fd0d60c01b612e4e565b610cf5612f5a565b610d0967fd57a7b99f8b2e3660c01b612e4e565b610d1d67b84e9aa335ce692f60c01b612e4e565b610d3167643e5d7d7447c52e60c01b612e4e565b610d4567adb190546928ee1660c01b612e4e565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050610dad672922c653a4a340b360c01b612e4e565b610dc167d184a05ff8d412c260c01b612e4e565b6000816000015403610e2757610de1678c87d943f50f0ea060c01b612e4e565b610df5671b9f806e16ed2dfe60c01b612e4e565b6040517f1704edbb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e3b670a6ce197fd362be560c01b612e4e565b610e4f67a2d347acc59c444460c01b612e4e565b610e636753e847d7bd96fb0a60c01b612e4e565b8060010160089054906101000a900460ff1615610ed457610e8e67620b6b7ab778e1c160c01b612e4e565b610ea2678fee3335ff2e0b9b60c01b612e4e565b6040517f97198fa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ee86754aa019b0b7726c060c01b612e4e565b610efc67aa9caf93c30c72b560c01b612e4e565b610f10674f8a33545e20206760c01b612e4e565b8060050160009054906101000a900463ffffffff168160010160009054906101000a900463ffffffff16610f449190614282565b63ffffffff1642101561107557610f6567590b3f7a3bc5921c60c01b612e4e565b610f7967a3e6edf88816448660c01b612e4e565b428160010160046101000a81548163ffffffff021916908363ffffffff160217905550610fb0679e4524b9be704de560c01b612e4e565b60018160010160086101000a81548160ff021916908315150217905550610fe167c4f56e8613b194e060c01b612e4e565b610ff56754804a0568a2420260c01b612e4e565b3373ffffffffffffffffffffffffffffffffffffffff167f828764c21e74c28710e19919735825aba966621c95cbd913f8ed65a2d298f48c826000015460405161103f9190613c10565b60405180910390a261105b676e16e72f0dbdd4b560c01b612e4e565b61106f67dd933d62ff016ab160c01b612e4e565b506110bd565b611089677498668cc086bac760c01b612e4e565b61109d670d3f42b09f60edb460c01b612e4e565b6110b1678e6e738bbc198ffd60c01b612e4e565b6110bb3383612fb1565b505b6110c56134ba565b50565b6110dc677f67747fe9649bfc60c01b612e4e565b6110e4612e51565b6110f8673480222e95cd931460c01b612e4e565b61110c67083253e7eeb4871660c01b612e4e565b61112067e3a78cbb3367ccd360c01b612e4e565b8060048190555050565b61113e67381a47963f4196e260c01b612e4e565b611146612f5a565b61115a67e0fb84e301b0ae2360c01b612e4e565b61116e67b041837b5a59603260c01b612e4e565b611182673e55ad110582c77f60c01b612e4e565b611196677ba4ae178d37156a60c01b612e4e565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002090506111fe678144859e4d3a8ac560c01b612e4e565b61121267349af0497e5cd30960c01b612e4e565b8060010160089054906101000a900460ff166112825761123c6772e2c3ab76c2791260c01b612e4e565b6112506759dc52ab502d38a660c01b612e4e565b6040517feef9087e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61129667ca6584c7888c164d60c01b612e4e565b6112aa67a1e736bc245d3cdd60c01b612e4e565b6112be67e3cb2e0aefc2586d60c01b612e4e565b6005548160010160049054906101000a900463ffffffff1663ffffffff166112e69190614178565b42101561134757611301676ea687de1f12a41960c01b612e4e565b61131567ddd5898ba213b35c60c01b612e4e565b6040517f52c459f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61135b675e39b76e14f5756d60c01b612e4e565b61136f67f44116102ebc396160c01b612e4e565b61138367c9b71c608995ffbe60c01b612e4e565b61138d3383612fb1565b506113966134ba565b50565b60006113af67123994520a536f7460c01b612e4e565b6113c3670e87df8cf5a599db60c01b612e4e565b6113d767741443532edb1eb860c01b612e4e565b60006113ed672f1ce3e6bdd918f560c01b612e4e565b6114016784774c26c185f3ae60c01b612e4e565b6000600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061145967049dbdc851abae9c60c01b612e4e565b61146d6711882ea6e4480d8260c01b612e4e565b6000600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506114c467f8bd99134d01f18660c01b612e4e565b6114d86711a3ede05fa591c760c01b612e4e565b60005b8281101561154d576114f767c0c387b51ba34f2f60c01b612e4e565b81600082815260200190815260200160002060000154846115189190614178565b935061152e674dfd9bc22d76ea0060c01b612e4e565b6115426735b59734924ad54560c01b612e4e565b8060010190506114db565b5061156267be94acd0a59694e060c01b612e4e565b61157667ae17314496791d9160c01b612e4e565b829350505050919050565b61159567fea109b9d854cf2360c01b612e4e565b61159d612e51565b6115b167866d38108901faa260c01b612e4e565b6115c567c2c2d7a6965ac21e60c01b612e4e565b6115d967b192ace7b1c65e0260c01b612e4e565b6115ed67a96db3ee52d0ef3360c01b612e4e565b6115f56134d3565b565b60025481565b600960009054906101000a900460ff1681565b600b6020528060005260406000206000915090505481565b61163c67df9604badd6d347c60c01b612e4e565b611644612e51565b61165867ab3da2390a7217ce60c01b612e4e565b61166c67a1a78941d50068b960c01b612e4e565b61168067eb639fa9a95dbcc260c01b612e4e565b8060018190555061169b67ae483f284c5c667060c01b612e4e565b62278d00816116aa919061421d565b60068190555050565b6000806116be613545565b90508060000160009054906101000a900460ff1691505090565b60006116ee671e353a7a296bc37960c01b612e4e565b61170267addcf20f80d53b7360c01b612e4e565b6117166786ddf020d902a5ff60c01b612e4e565b600e54905090565b61173267ad667a64f4978b7a60c01b612e4e565b600061173c61356d565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561178a5750825b9050600060018367ffffffffffffffff161480156117bf575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156117cd575080155b15611804576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156118545760018560000160086101000a81548160ff0219169083151502179055505b611868678264858e49dedcf460c01b612e4e565b61187c67c833b0463101a7a260c01b612e4e565b611890679e5a3e616266eca560c01b612e4e565b6118a467e6f3224d43e489c960c01b612e4e565b6118ad33613595565b6118c1670cc5e42825a5376e60c01b612e4e565b6118d567813e31c351dda0ac60c01b612e4e565b6118dd6135a9565b6118f16733d00a837db4699760c01b612e4e565b611905675366fe606239c09f60c01b612e4e565b61190d6135bb565b6119216714a77fe737b621ea60c01b612e4e565b6119356737e59a0fc2dc23ea60c01b612e4e565b61193e8f612dc8565b611952674e0ab26e31a5198d60c01b612e4e565b8d6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119a66702ccc81d7bff652560c01b612e4e565b8c63ffffffff166001819055506119c767ea6f48f69191886260c01b612e4e565b8b6004819055506119e26799fa93e541e7ce1b60c01b612e4e565b8a6005819055506119fd67576de98d70f008e360c01b612e4e565b62278d008d611a0c91906142ba565b63ffffffff16600681905550611a2c67a9f5ad2d15ce5a4960c01b612e4e565b89600781905550611a47679fd76f677e14524260c01b612e4e565b88600881905550611a62677968ab95f66a224060c01b612e4e565b87600281905550611a7d6798589fa553f91e8360c01b612e4e565b86600381905550611a9867b5a66796d1e4baef60c01b612e4e565b85600960006101000a81548160ff0219169083151502179055508315611b0e5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051611b05919061433a565b60405180910390a15b505050505050505050505050505050565b60065481565b611b2d612e51565b611b3760006135cd565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611b73676ca6a3138de4996c60c01b612e4e565b611b8767a4a0f357bf4e27dd60c01b612e4e565b611b9b678adc283527fa413560c01b612e4e565b818510611be757611bb667aba8fe301213e38760c01b612e4e565b611bca67a107ce563f352c5560c01b612e4e565b611bde67760a7ec7ed6f202e60c01b612e4e565b60009050611c76565b611bfb672e378834007e3bb660c01b612e4e565b611c0f67ec2c72dd13a14aff60c01b612e4e565b611c23675caed65dcab4a6f560c01b612e4e565b6000828686611c3291906141ac565b611c3c919061421d565b84611c47919061424e565b9050611c5d67d32913acb01ada6b60c01b612e4e565b611c7167868a76f7a37ae69960c01b612e4e565b809150505b949350505050565b60045481565b60015481565b6000611ca067341662c6e05446ed60c01b612e4e565b611cb467d5b420702b5d529060c01b612e4e565b611cc8679aad6b8bc00ff9d860c01b612e4e565b600d54905090565b611ce4670814b302efd28d7060c01b612e4e565b611cec612e51565b611d00674c4afecd8c0ad56260c01b612e4e565b611d1467cd69b84d664b1d2f60c01b612e4e565b611d28671217d974abc583f460c01b612e4e565b611d3c67a0d54084d7abea8b60c01b612e4e565b611d446136a4565b565b611d5a67399adde4da7d275260c01b612e4e565b611d62612e51565b611d766767f14619fb8982ac60c01b612e4e565b611d8a67599295e2237fdebb60c01b612e4e565b611d9e67ad296bbb28065dc560c01b612e4e565b8060058190555050565b611dbc6795144f34bebca2d060c01b612e4e565b611dc4612e51565b611dd867a235f9c96d897a1e60c01b612e4e565b611dec679cf94fa52350166d60c01b612e4e565b611e00677dd699c33259284060c01b612e4e565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611e6c677eb5319803fef74e60c01b612e4e565b611e806730290148d17f8c0b60c01b612e4e565b8073ffffffffffffffffffffffffffffffffffffffff167f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d6000604051611ec79190613cd6565b60405180910390a250565b600080611edd613716565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b611f1e67c5b454c6f8b9a95760c01b612e4e565b611f26612f5a565b611f3a67b113f5404950cb7d60c01b612e4e565b611f4e679158215a97d25a1760c01b612e4e565b611f5661373e565b611f6a6789de050e481c25b460c01b612e4e565b611f7e67a9d26786d96e310260c01b612e4e565b611f92672e4f3f75e1697bf760c01b612e4e565b611fa667310049df13591a0560c01b612e4e565b611fba67246959363178924260c01b612e4e565b600960009054906101000a900460ff1680156120205750600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b1561207f57612039675f6d4464f76f6f6360c01b612e4e565b61204d679c895f1e81bd007360c01b612e4e565b6040517f584a793800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61209367c7394731e6027b0a60c01b612e4e565b6120a767c72b16a4dc080f6060c01b612e4e565b6120bb67ab0fb858315d6c7460c01b612e4e565b6120cf67d168a2b14ec1ddf760c01b612e4e565b6120e3670e044b1e6a3c7bba60c01b612e4e565b6120f7673eb104d3da1761d460c01b612e4e565b600081036121595761211367f24ac40d76dad0fe60c01b612e4e565b612127673d3b1bd09037572d60c01b612e4e565b6040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61216d67ce63ca2bbe379b9f60c01b612e4e565b612181673d9b3a944656b87f60c01b612e4e565b6121956793053cf8716139f660c01b612e4e565b60006002541180156121a8575060025481105b15612207576121c16799ecab82b8a3eb8f60c01b612e4e565b6121d567bda9f1ef13dd06b260c01b612e4e565b6040517f697fb45900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61221b67efe20b774a27402060c01b612e4e565b61222f677f98f3b26c65429760c01b612e4e565b61224367308534222c05c0fa60c01b612e4e565b6000600354118015612269575060035461225c33611399565b826122679190614178565b115b156122c85761228267c2972967ca56b27760c01b612e4e565b612296677ff43a26c61a78ed60c01b612e4e565b6040517ffef49f1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122dc679b72755f6ed789eb60c01b612e4e565b6122f0677bb2a500532480f560c01b612e4e565b61230467ddc49015a0829a9860c01b612e4e565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061235c6765bdada9c7fae79360c01b612e4e565b6040518061010001604052808381526020014263ffffffff168152602001600063ffffffff16815260200160001515815260200160045481526020016008548152602001600754815260200160015463ffffffff16815250600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548163ffffffff021916908363ffffffff16021790555060608201518160010160086101000a81548160ff0219169083151502179055506080820151816002015560a0820151816003015560c0820151816004015560e08201518160050160006101000a81548163ffffffff021916908363ffffffff1602179055509050506124d867e8224f5cf94b972360c01b612e4e565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061252890614355565b9190505550612541675c04e90f7a0a31f960c01b612e4e565b81600d60008282546125539190614178565b9250508190555061256e671529646ecf448ee660c01b612e4e565b670de0b6b3a7640000612588600154600454600154610b3a565b8361259391906141ac565b61259d919061421d565b600f60008282546125ae9190614178565b925050819055506125c9676a4f9d234fd0c0b160c01b612e4e565b6125dd6768b9e7ccc732b44560c01b612e4e565b61262a33308460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612ed8909392919063ffffffff16565b61263e67047fdbb551b51aa960c01b612e4e565b612652675d3da345d08ec2bc60c01b612e4e565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d836040516126989190613c10565b60405180910390a2506126a96134ba565b50565b6126c06764224e5135551ac460c01b612e4e565b6126c8612e51565b6126dc678b1ab29cd215ae4260c01b612e4e565b6126f067be46f85f1661d4ab60c01b612e4e565b6127046747030bcac017551b60c01b612e4e565b8060088190555050565b600a602052816000526040600020602052806000526040600020600091509150508060000154908060010160009054906101000a900463ffffffff16908060010160049054906101000a900463ffffffff16908060010160089054906101000a900460ff16908060020154908060030154908060040154908060050160009054906101000a900463ffffffff16905088565b6127b4675ebf4be0a0ca629660c01b612e4e565b6127bc612e51565b6127d0679f561673969f8ea660c01b612e4e565b6127e46739985f0e2a42c79760c01b612e4e565b6127f8676d759ae3d9e2184060c01b612e4e565b8060028190555050565b61281667a3d29664afdbb61b60c01b612e4e565b61281e612e51565b61283267d2c273555041fe2560c01b612e4e565b61284667136a667735fe323560c01b612e4e565b61285a6708003d19608d711460c01b612e4e565b61286e676deacbff592a8a8960c01b612e4e565b600081036128d05761288a67808b078107652cb460c01b612e4e565b61289e6753dfff9434a9f75d60c01b612e4e565b6040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6128e4674209ec8ff5e1744a60c01b612e4e565b6128f8672891c9b5a9270c4160c01b612e4e565b61290c67852960116007b77f60c01b612e4e565b80600f54600e5461291d919061424e565b101561297d5761293767a78893d48aa2bae160c01b612e4e565b61294b67ddb75427835015a560c01b612e4e565b6040517f3270436b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61299167fb8a50ecf42ba1c260c01b612e4e565b6129a567b4063789c1b7d9cb60c01b612e4e565b80600e60008282546129b7919061424e565b925050819055506129d2674de7cc99eea178db60c01b612e4e565b6129e667815321fe4bc285b860c01b612e4e565b612a31338260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661377f9092919063ffffffff16565b612a45671153b7d5fe9edd4c60c01b612e4e565b612a5967bbba4d2bc7d3c86260c01b612e4e565b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436482604051612a9f9190613c10565b60405180910390a250565b612abe678a60bbb918f1b25460c01b612e4e565b612ac6612e51565b612ada67dd56d355dce5de3760c01b612e4e565b612aee6789774e0bda482bad60c01b612e4e565b612b026716f7acf73ae701bc60c01b612e4e565b6001600960006101000a81548160ff021916908315150217905550565b612b33676bf69b1412debb9660c01b612e4e565b612b3b612e51565b612b4f67d45d768b7ed4bdf160c01b612e4e565b612b636791f2c9a14ec7c40d60c01b612e4e565b612b77672d5ef73c2979ad3d60c01b612e4e565b6000600960006101000a81548160ff021916908315150217905550565b612ba86757e715cb116aeee060c01b612e4e565b612bb0612e51565b612bc467155b71f2e3ac1ce260c01b612e4e565b612bd867df70db9e8e7c5ab260c01b612e4e565b612bec671fe571415ff3824760c01b612e4e565b6001600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612c5867783f768e9bbfc23760c01b612e4e565b612c6c674dbdccfa13a72db360c01b612e4e565b8073ffffffffffffffffffffffffffffffffffffffff167f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d6001604051612cb39190613cd6565b60405180910390a250565b612cd267cdb16107bf334ffe60c01b612e4e565b612cda612e51565b612cee675ec5364c188fb75560c01b612e4e565b612d02674e02617731e123e860c01b612e4e565b612d1667a9c53030b7a38e1460c01b612e4e565b8060078190555050565b612d3467d2af7686b151c60360c01b612e4e565b612d3c612e51565b612d5067130e20711c6dd8d160c01b612e4e565b612d64677041ce65391f63ec60c01b612e4e565b612d786785f36fb776cf672560c01b612e4e565b8060038190555050565b6000612d98673d0a2d5def5284d260c01b612e4e565b612dac67954e657be076df6960c01b612e4e565b612dc067a722dcee375db32b60c01b612e4e565b600f54905090565b612dd0612e51565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612e425760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612e399190614061565b60405180910390fd5b612e4b816135cd565b50565b50565b612e596137fe565b73ffffffffffffffffffffffffffffffffffffffff16612e77611ed2565b73ffffffffffffffffffffffffffffffffffffffff1614612ed657612e9a6137fe565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401612ecd9190614061565b60405180910390fd5b565b612f54848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401612f0d9392919061439d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613806565b50505050565b6000612f6461389d565b90506002816000015403612fa4576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b612fc5670bdfde5e8d74962560c01b612e4e565b612fd9676749c6d6ba00546460c01b612e4e565b612fed67c182d4f1e36dcae160c01b612e4e565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020905061305567fe2bf72b56033c8960c01b612e4e565b613069677f21c96ae2e5669360c01b612e4e565b60008160000154905061308667c311a3e913c98c1260c01b612e4e565b61309a67f70459dafb42da9760c01b612e4e565b60006130f5828460010160009054906101000a900463ffffffff1663ffffffff16426130c6919061424e565b8560020154866003015487600401548860050160009054906101000a900463ffffffff1663ffffffff166109a2565b905061310b67e27377fcfe60da4c60c01b612e4e565b61311f67ebb1a41560c4349d60c01b612e4e565b6000828261312d919061424e565b9050613143674e5827196005202a60c01b612e4e565b82600d6000828254613155919061424e565b925050819055506131706713e94f0456097ca960c01b612e4e565b80600e6000828254613182919061424e565b9250508190555061319d67bab595a3bb5fb83360c01b612e4e565b80600f60008282546131af919061424e565b925050819055506131ca6792f660ae3a40759060c01b612e4e565b600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206000808201600090556001820160006101000a81549063ffffffff02191690556001820160046101000a81549063ffffffff02191690556001820160086101000a81549060ff02191690556002820160009055600382016000905560048201600090556005820160006101000a81549063ffffffff021916905550506132aa67bb1c9082132b1e5160c01b612e4e565b6132be672e0f8b34a03771cc60c01b612e4e565b613309868360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661377f9092919063ffffffff16565b61331d6759e2ae14da7a54c460c01b612e4e565b613331675e8eafbaf92e829d60c01b612e4e565b8573ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516133779190613c10565b60405180910390a2613393677605b4f3c000822560c01b612e4e565b6133a76785edcdf512e23d2860c01b612e4e565b8573ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040516133ed9190613c10565b60405180910390a26134096723a6192e293fe0aa60c01b612e4e565b61341d6726d46e14dfe6ad7460c01b612e4e565b600061342887611399565b0361349d57613441676f1eab6ec8db93ba60c01b612e4e565b61345567d03b71acc375f5d660c01b612e4e565b600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556134b2565b6134b1670118e5adc839000660c01b612e4e565b5b505050505050565b60006134c461389d565b90506001816000018190555050565b6134db6138c5565b60006134e5613545565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61352d6137fe565b60405161353a9190614061565b60405180910390a150565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61359d613905565b6135a681613945565b50565b6135b1613905565b6135b96139cb565b565b6135c3613905565b6135cb6139ff565b565b60006135d7613716565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6136ac61373e565b60006136b6613545565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586136fe6137fe565b60405161370b9190614061565b60405180910390a150565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6137466116b3565b1561377d576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6137f9838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016137b29291906143d4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613806565b505050565b600033905090565b6000613831828473ffffffffffffffffffffffffffffffffffffffff16613a2090919063ffffffff16565b905060008151141580156138565750808060200190518101906138549190614412565b155b1561389857826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161388f9190614061565b60405180910390fd5b505050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b6138cd6116b3565b613903576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61390d613a36565b613943576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61394d613905565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036139bf5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016139b69190614061565b60405180910390fd5b6139c8816135cd565b50565b6139d3613905565b60006139dd613545565b905060008160000160006101000a81548160ff02191690831515021790555050565b613a07613905565b6000613a1161389d565b90506001816000018190555050565b6060613a2e83836000613a56565b905092915050565b6000613a4061356d565b60000160089054906101000a900460ff16905090565b606081471015613a9d57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401613a949190614061565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051613ac691906144b0565b60006040518083038185875af1925050503d8060008114613b03576040519150601f19603f3d011682016040523d82523d6000602084013e613b08565b606091505b5091509150613b18868383613b23565b925050509392505050565b606082613b3857613b3382613bb2565b613baa565b60008251148015613b60575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15613ba257836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401613b999190614061565b60405180910390fd5b819050613bab565b5b9392505050565b600081511115613bc55780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b613c0a81613bf7565b82525050565b6000602082019050613c256000830184613c01565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613c5b82613c30565b9050919050565b613c6b81613c50565b8114613c7657600080fd5b50565b600081359050613c8881613c62565b92915050565b600060208284031215613ca457613ca3613c2b565b5b6000613cb284828501613c79565b91505092915050565b60008115159050919050565b613cd081613cbb565b82525050565b6000602082019050613ceb6000830184613cc7565b92915050565b613cfa81613bf7565b8114613d0557600080fd5b50565b600081359050613d1781613cf1565b92915050565b600060208284031215613d3357613d32613c2b565b5b6000613d4184828501613d08565b91505092915050565b60008060008060008060c08789031215613d6757613d66613c2b565b5b6000613d7589828a01613d08565b9650506020613d8689828a01613d08565b9550506040613d9789828a01613d08565b9450506060613da889828a01613d08565b9350506080613db989828a01613d08565b92505060a0613dca89828a01613d08565b9150509295509295509295565b600080600060608486031215613df057613def613c2b565b5b6000613dfe86828701613d08565b9350506020613e0f86828701613d08565b9250506040613e2086828701613d08565b9150509250925092565b600063ffffffff82169050919050565b613e4381613e2a565b8114613e4e57600080fd5b50565b600081359050613e6081613e3a565b92915050565b613e6f81613cbb565b8114613e7a57600080fd5b50565b600081359050613e8c81613e66565b92915050565b6000806000806000806000806000806101408b8d031215613eb657613eb5613c2b565b5b6000613ec48d828e01613c79565b9a50506020613ed58d828e01613c79565b9950506040613ee68d828e01613e51565b9850506060613ef78d828e01613d08565b9750506080613f088d828e01613d08565b96505060a0613f198d828e01613d08565b95505060c0613f2a8d828e01613d08565b94505060e0613f3b8d828e01613d08565b935050610100613f4d8d828e01613d08565b925050610120613f5f8d828e01613e7d565b9150509295989b9194979a5092959850565b6000819050919050565b6000613f96613f91613f8c84613c30565b613f71565b613c30565b9050919050565b6000613fa882613f7b565b9050919050565b6000613fba82613f9d565b9050919050565b613fca81613faf565b82525050565b6000602082019050613fe56000830184613fc1565b92915050565b6000806000806080858703121561400557614004613c2b565b5b600061401387828801613d08565b945050602061402487828801613d08565b935050604061403587828801613d08565b925050606061404687828801613d08565b91505092959194509250565b61405b81613c50565b82525050565b60006020820190506140766000830184614052565b92915050565b6000806040838503121561409357614092613c2b565b5b60006140a185828601613c79565b92505060206140b285828601613d08565b9150509250929050565b6140c581613e2a565b82525050565b6000610100820190506140e1600083018b613c01565b6140ee602083018a6140bc565b6140fb60408301896140bc565b6141086060830188613cc7565b6141156080830187613c01565b61412260a0830186613c01565b61412f60c0830185613c01565b61413c60e08301846140bc565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061418382613bf7565b915061418e83613bf7565b92508282019050808211156141a6576141a5614149565b5b92915050565b60006141b782613bf7565b91506141c283613bf7565b92508282026141d081613bf7565b915082820484148315176141e7576141e6614149565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061422882613bf7565b915061423383613bf7565b925082614243576142426141ee565b5b828204905092915050565b600061425982613bf7565b915061426483613bf7565b925082820390508181111561427c5761427b614149565b5b92915050565b600061428d82613e2a565b915061429883613e2a565b9250828201905063ffffffff8111156142b4576142b3614149565b5b92915050565b60006142c582613e2a565b91506142d083613e2a565b9250826142e0576142df6141ee565b5b828204905092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061432461431f61431a846142eb565b613f71565b6142f5565b9050919050565b61433481614309565b82525050565b600060208201905061434f600083018461432b565b92915050565b600061436082613bf7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361439257614391614149565b5b600182019050919050565b60006060820190506143b26000830186614052565b6143bf6020830185614052565b6143cc6040830184613c01565b949350505050565b60006040820190506143e96000830185614052565b6143f66020830184613c01565b9392505050565b60008151905061440c81613e66565b92915050565b60006020828403121561442857614427613c2b565b5b6000614436848285016143fd565b91505092915050565b600081519050919050565b600081905092915050565b60005b83811015614473578082015181840152602081019050614458565b60008484015250505050565b600061448a8261443f565b614494818561444a565b93506144a4818560208601614455565b80840191505092915050565b60006144bc828461447f565b91508190509291505056fea26469706673582212202a5789704b4c5b7ac4ace5c61b06d2a8c7da11f81788202af58d72970a62204e64736f6c63430008140033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
