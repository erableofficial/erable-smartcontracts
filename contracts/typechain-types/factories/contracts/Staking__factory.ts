/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnstakeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "WhitelistStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
    ],
    name: "calculateTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
    ],
    name: "calculateTotalWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
    ],
    name: "calculateYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalStakedForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStakes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "requestUnstakeTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "unstakeRequested",
            type: "bool",
          },
        ],
        internalType: "struct Staking.Stake[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyIncreasePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthsInStakingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startingSlashingPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
    ],
    name: "updateCooldownPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
    ],
    name: "updateMaxCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minCap",
        type: "uint256",
      },
    ],
    name: "updateMinCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
    ],
    name: "updateMonthlyIncreasePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "updateStakingDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
    ],
    name: "updateStartingSlashingPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
    ],
    name: "updateYieldConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakeCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestUnstakeTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unstakeRequested",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldConstant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d2f806100206000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80637a65cd0b11610151578063b5d5b5fa116100c3578063d6b0f48411610087578063d6b0f4841461058e578063e43252d714610596578063e6d24866146105a9578063e81ba080146105bc578063eded3fda146105cf578063f2fde38b146105d757600080fd5b8063b5d5b5fa146104e8578063bcaabf6c1461054d578063cb43b2dd14610560578063cdfb2b4e14610573578063d2771e011461057b57600080fd5b80638456cb59116101155780638456cb5914610464578063861f6bfd1461046c5780638ab1d6811461047f5780638da5cb5b14610492578063a694fc3a146104c2578063b3c55721146104d557600080fd5b80637a65cd0b146104175780638005a7de1461042057806380a3301b14610429578063817b1cd21461043c578063842e29811461044457600080fd5b80633fa615b0116101ea5780635b1d7086116101ae5780635b1d7086146103a85780635c975abb146103bb57806366666aa9146103d35780636f629512146103db578063715018a6146103e457806372f702f3146103ec57600080fd5b80633fa615b01461034c57806345ff4c8014610355578063483a93101461036857806351fb012d1461037b5780635678b0241461038857600080fd5b8063291614791161023c57806329161479146102ef5780632e17de78146102f857806336c1105a1461030b578063379607f51461031e5780633b42ffcf146103315780633f4ba83a1461034457600080fd5b806304646a491461027957806306c933d8146102955780630b7ead4a146102c857806316c621e0146102d157806323548b8b146102e6575b600080fd5b61028260055481565b6040519081526020015b60405180910390f35b6102b86102a3366004611aa6565b600c6020526000908152604090205460ff1681565b604051901515815260200161028c565b61028260075481565b6102e46102df366004611ac8565b6105ea565b005b61028260035481565b61028260085481565b6102e4610306366004611ac8565b610706565b6102e4610319366004611ac8565b610aa4565b6102e461032c366004611ac8565b610ab1565b61028261033f366004611aa6565b610bdd565b6102e4610c3a565b61028260025481565b6102e4610363366004611ae1565b610c4c565b610282610376366004611ac8565b610dbd565b6009546102b89060ff1681565b610282610396366004611aa6565b600b6020526000908152604090205481565b6102e46103b6366004611ac8565b610e57565b600080516020611cba8339815191525460ff166102b8565b600e54610282565b61028260065481565b6102e4610e77565b6000546103ff906001600160a01b031681565b6040516001600160a01b03909116815260200161028c565b61028260045481565b61028260015481565b610282610437366004611ac8565b610e89565b600d54610282565b610457610452366004611aa6565b610f10565b60405161028c9190611b2b565b6102e4611038565b6102e461047a366004611ac8565b611048565b6102e461048d366004611aa6565b611055565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166103ff565b6102e46104d0366004611ac8565b6110ac565b6102e46104e3366004611ac8565b6113e0565b61052b6104f6366004611b91565b600a60209081526000928352604080842090915290825290208054600182015460028301546003909301549192909160ff1684565b604080519485526020850193909352918301521515606082015260800161028c565b6102e461055b366004611ac8565b6113ed565b6102e461056e366004611ac8565b6113fa565b6102e4611598565b610282610589366004611bbb565b6115af565b6102e46116fa565b6102e46105a4366004611aa6565b61170e565b6102e46105b7366004611ac8565b61176d565b6102e46105ca366004611ac8565b61177a565b600f54610282565b6102e46105e5366004611aa6565b611787565b6105f26117c2565b6000811161063a5760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f74206465706f73697420360841b60448201526064015b60405180910390fd5b80600e600082825461064c9190611bf3565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611c06565b5060405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020015b60405180910390a250565b61070e61181d565b336000908152600a60209081526040808320848452909152902080546107825760405162461bcd60e51b815260206004820152602360248201527f4e6f207374616b656420616d6f756e7420746f207265717565737420756e7374604482015262616b6560e81b6064820152608401610631565b600381015460ff16156107d75760405162461bcd60e51b815260206004820152601960248201527f556e7374616b6520616c726561647920726571756573746564000000000000006044820152606401610631565b80546001546000908103610800576107f9828460010154426105899190611c28565b905061088a565b60015483600101546108129190611bf3565b4210156108735742600284015560038301805460ff19166001179055825460405133917f828764c21e74c28710e19919735825aba966621c95cbd913f8ed65a2d298f48c9161086391815260200190565b60405180910390a2505050610a8a565b610887828460010154426105899190611c28565b90505b81600d5410156108dc5760405162461bcd60e51b815260206004820152601d60248201527f4f766572666c6f773a20746f74616c207374616b656420616d6f756e740000006044820152606401610631565b81600d60008282546108ee9190611c28565b90915550600090506109008383611c28565b905080600e5410156109545760405162461bcd60e51b815260206004820152601c60248201527f4f766572666c6f773a2072657761726420706f6f6c20616d6f756e74000000006044820152606401610631565b80600e60008282546109669190611c28565b9250508190555080600f600082825461097f9190611c28565b9091555050336000818152600a602090815260408083208984529091528082208281556001810183905560028101839055600301805460ff191690559054905163a9059cbb60e01b81526004810192909252602482018490526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190611c06565b5060405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2610a6d33610bdd565b600003610a8557336000908152600b60205260408120555b505050505b610aa16001600080516020611cda83398151915255565b50565b610aac6117c2565b600455565b610ab961181d565b610ac1611869565b336000908152600a602090815260408083208484529091529020600381015460ff16610b275760405162461bcd60e51b8152602060048201526015602482015274155b9cdd185ad9481b9bdd081c995c5d595cdd1959605a1b6044820152606401610631565b6005548160020154610b399190611bf3565b421015610b885760405162461bcd60e51b815260206004820152601860248201527f436f6f6c646f776e20706572696f64206e6f74206f76657200000000000000006044820152606401610631565b80546001820154600090610ba29083906105899042611c28565b90506000610bb08383611c28565b905082600d6000828254610bc49190611c28565b9250508190555080600e60008282546109669190611c28565b6001600160a01b0381166000908152600b6020908152604080832054600a9092528220829190825b82811015610c3057600081815260208390526040902054610c269085611bf3565b9350600101610c05565b5091949350505050565b610c426117c2565b610c4a61189a565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610c925750825b905060008267ffffffffffffffff166001148015610caf5750303b155b905081158015610cbd575080155b15610cdb5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610d0557845460ff60401b1916600160401b1785555b610d0e336118fa565b610d1661190b565b610d1e61191b565b600080546001600160a01b0319166001600160a01b038d1617815560018b9055600281905560035560048990556005889055610d5d62278d008b611c3b565b600655600787905560088690558315610db057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b60006001548210610dd057506000919050565b600060015483600854610de39190611c5d565b610ded9190611c3b565b600754610dfa9190611c28565b905060008111610e4c5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420736c6173682061206e656761746976652076616c75650000006044820152606401610631565b92915050565b919050565b610e5f6117c2565b6001819055610e7162278d0082611c3b565b60065550565b610e7f6117c2565b610c4a600061192b565b60006001548210610ea257600454610e4c906090611c5d565b600060015483600654610eb59190611c5d565b610ec790670de0b6b3a7640000611c5d565b610ed19190611c3b565b905060006ec097ce7bc90715b34b9f10000000008283600454610ef49190611c5d565b610efe9190611c5d565b610f089190611c3b565b949350505050565b6001600160a01b0381166000908152600b60205260408120546060918167ffffffffffffffff811115610f4557610f45611c74565b604051908082528060200260200182016040528015610fa357816020015b610f9060405180608001604052806000815260200160008152602001600081526020016000151581525090565b815260200190600190039081610f635790505b50905060005b82811015611030576001600160a01b0385166000908152600a6020908152604080832084845282529182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff1615156060820152825183908390811061101d5761101d611c8a565b6020908102919091010152600101610fa9565b509392505050565b6110406117c2565b610c4a61199c565b6110506117c2565b600555565b61105d6117c2565b6001600160a01b0381166000818152600c60209081526040808320805460ff19169055519182527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d91016106fb565b6110b461181d565b6110bc611869565b60095460ff1615806110dd5750336000908152600c602052604090205460ff165b6111295760405162461bcd60e51b815260206004820152601760248201527f41646472657373206e6f742077686974656c69737465640000000000000000006044820152606401610631565b6000811161116a5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610631565b600254156111c4576002548110156111c45760405162461bcd60e51b815260206004820152601860248201527f416d6f756e742062656c6f77206d696e696d756d2063617000000000000000006044820152606401610631565b60035415611230576003546111d833610bdd565b6111e29083611bf3565b11156112305760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742065786365656473206d6178696d756d206361700000000000006044820152606401610631565b336000818152600b602081815260408084208054825160808101845288815242818601908152818501888152606083018981528a8a52600a8852868a20858b528852958920835181559151600183015551600282015593516003909401805460ff19169415159490941790935595855292909152815490929091906112b483611ca0565b919050555082600d60008282546112cb9190611bf3565b925050819055506000670de0b6b3a76400006112e8600154610e89565b6112f29086611c5d565b6112fc9190611c3b565b905080600f60008282546113109190611bf3565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561136c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113909190611c06565b5060405184815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a2505050610aa16001600080516020611cda83398151915255565b6113e86117c2565b600855565b6113f56117c2565b600255565b6114026117c2565b600081116114465760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152606401610631565b80600f54600e546114579190611c28565b10156114d95760405162461bcd60e51b815260206004820152604560248201527f4e6f7420656e6f75676820746f6b656e7320696e2072657761726420706f6f6c60448201527f206166746572206163636f756e74696e6720666f722070656e64696e67207265606482015264776172647360d81b608482015260a401610631565b80600e60008282546114eb9190611c28565b909155505060005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115659190611c06565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020016106fb565b6115a06117c2565b6009805460ff19166001179055565b6000806115bb83610e89565b905060006115c884610dbd565b90506000670de0b6b3a76400006115df8488611c5d565b6115e99190611c3b565b90506000670de0b6b3a76400006116008484611c5d565b61160a9190611c3b565b9050866116178382611bf3565b101561167b5760405162461bcd60e51b815260206004820152602d60248201527f4f766572666c6f7720696e20746f74616c20776974686472617720616d6f756e60448201526c3a1031b0b631bab630ba34b7b760991b6064820152608401610631565b600081611688848a611bf3565b6116929190611c28565b905061169e8284611c28565b600e5410156116ef5760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e742072657761726420706f6f6c00000000000000006044820152606401610631565b979650505050505050565b6117026117c2565b6009805460ff19169055565b6117166117c2565b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916600190811790915591519182527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d91016106fb565b6117756117c2565b600755565b6117826117c2565b600355565b61178f6117c2565b6001600160a01b0381166117b957604051631e4fbdf760e01b815260006004820152602401610631565b610aa18161192b565b336117f47f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610c4a5760405163118cdaa760e01b8152336004820152602401610631565b600080516020611cda83398151915280546001190161184f57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b6001600080516020611cda83398151915255565b600080516020611cba8339815191525460ff1615610c4a5760405163d93c066560e01b815260040160405180910390fd5b6118a26119e5565b600080516020611cba833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b611902611a15565b610aa181611a5e565b611913611a15565b610c4a611a66565b611923611a15565b610c4a611a87565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6119a4611869565b600080516020611cba833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336118dc565b600080516020611cba8339815191525460ff16610c4a57604051638dfc202b60e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610c4a57604051631afcd79f60e31b815260040160405180910390fd5b61178f611a15565b611a6e611a15565b600080516020611cba833981519152805460ff19169055565b611855611a15565b80356001600160a01b0381168114610e5257600080fd5b600060208284031215611ab857600080fd5b611ac182611a8f565b9392505050565b600060208284031215611ada57600080fd5b5035919050565b60008060008060008060c08789031215611afa57600080fd5b611b0387611a8f565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b602080825282518282018190526000919060409081850190868401855b82811015611b84578151805185528681015187860152858101518686015260609081015115159085015260809093019290850190600101611b48565b5091979650505050505050565b60008060408385031215611ba457600080fd5b611bad83611a8f565b946020939093013593505050565b60008060408385031215611bce57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b80820180821115610e4c57610e4c611bdd565b600060208284031215611c1857600080fd5b81518015158114611ac157600080fd5b81810381811115610e4c57610e4c611bdd565b600082611c5857634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610e4c57610e4c611bdd565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611cb257611cb2611bdd565b506001019056fecd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a26469706673582212203f1a70ad8821ca7d23934ce86415fca7452e9ebe29d7e673d1f9ddeddc007cd164736f6c63430008140033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
