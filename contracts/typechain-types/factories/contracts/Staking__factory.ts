/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnstakeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "WhitelistStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
    ],
    name: "calculateTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
    ],
    name: "calculateTotalWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
    ],
    name: "calculateYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalStakedForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyIncreasePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthsInStakingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startingSlashingPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
    ],
    name: "updateCooldownPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
    ],
    name: "updateMaxCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minCap",
        type: "uint256",
      },
    ],
    name: "updateMinCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
    ],
    name: "updateMonthlyIncreasePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "updateStakingDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
    ],
    name: "updateStartingSlashingPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
    ],
    name: "updateYieldConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakeCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestUnstakeTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "unstakeRequested",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldConstant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b4a806100206000396000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c806372f702f311610151578063b5d5b5fa116100c3578063d6b0f48411610087578063d6b0f48414610563578063e43252d71461056b578063e6d248661461057e578063e81ba08014610591578063eded3fda146105a4578063f2fde38b146105ac57600080fd5b8063b5d5b5fa146104bd578063bcaabf6c14610522578063cb43b2dd14610535578063cdfb2b4e14610548578063d2771e011461055057600080fd5b80638456cb59116101155780638456cb5914610439578063861f6bfd146104415780638ab1d681146104545780638da5cb5b14610467578063a694fc3a14610497578063b3c55721146104aa57600080fd5b806372f702f3146103e15780637a65cd0b1461040c5780638005a7de1461041557806380a3301b1461041e578063817b1cd21461043157600080fd5b80633f4ba83a116101ea5780635678b024116101ae5780635678b0241461037d5780635b1d70861461039d5780635c975abb146103b057806366666aa9146103c85780636f629512146103d0578063715018a6146103d957600080fd5b80633f4ba83a146103395780633fa615b01461034157806345ff4c801461034a578063483a93101461035d57806351fb012d1461037057600080fd5b8063291614791161023157806329161479146102e45780632e17de78146102ed57806336c1105a14610300578063379607f5146103135780633b42ffcf1461032657600080fd5b806304646a491461026e57806306c933d81461028a5780630b7ead4a146102bd57806316c621e0146102c657806323548b8b146102db575b600080fd5b61027760055481565b6040519081526020015b60405180910390f35b6102ad610298366004611953565b600c6020526000908152604090205460ff1681565b6040519015158152602001610281565b61027760075481565b6102d96102d4366004611975565b6105bf565b005b61027760035481565b61027760085481565b6102d96102fb366004611975565b6106db565b6102d961030e366004611975565b610a79565b6102d9610321366004611975565b610a86565b610277610334366004611953565b610bb2565b6102d9610c0f565b61027760025481565b6102d961035836600461198e565b610c21565b61027761036b366004611975565b610d92565b6009546102ad9060ff1681565b61027761038b366004611953565b600b6020526000908152604090205481565b6102d96103ab366004611975565b610e2c565b600080516020611ad58339815191525460ff166102ad565b600e54610277565b61027760065481565b6102d9610e4c565b6000546103f4906001600160a01b031681565b6040516001600160a01b039091168152602001610281565b61027760045481565b61027760015481565b61027761042c366004611975565b610e5e565b600d54610277565b6102d9610ee5565b6102d961044f366004611975565b610ef5565b6102d9610462366004611953565b610f02565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166103f4565b6102d96104a5366004611975565b610f59565b6102d96104b8366004611975565b61128d565b6105006104cb3660046119d8565b600a60209081526000928352604080842090915290825290208054600182015460028301546003909301549192909160ff1684565b6040805194855260208501939093529183015215156060820152608001610281565b6102d9610530366004611975565b61129a565b6102d9610543366004611975565b6112a7565b6102d9611445565b61027761055e366004611a02565b61145c565b6102d96115a7565b6102d9610579366004611953565b6115bb565b6102d961058c366004611975565b61161a565b6102d961059f366004611975565b611627565b600f54610277565b6102d96105ba366004611953565b611634565b6105c761166f565b6000811161060f5760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f74206465706f73697420360841b60448201526064015b60405180910390fd5b80600e60008282546106219190611a3a565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a19190611a4d565b5060405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020015b60405180910390a250565b6106e36116ca565b336000908152600a60209081526040808320848452909152902080546107575760405162461bcd60e51b815260206004820152602360248201527f4e6f207374616b656420616d6f756e7420746f207265717565737420756e7374604482015262616b6560e81b6064820152608401610606565b600381015460ff16156107ac5760405162461bcd60e51b815260206004820152601960248201527f556e7374616b6520616c726561647920726571756573746564000000000000006044820152606401610606565b805460015460009081036107d5576107ce8284600101544261055e9190611a6f565b905061085f565b60015483600101546107e79190611a3a565b4210156108485742600284015560038301805460ff19166001179055825460405133917f828764c21e74c28710e19919735825aba966621c95cbd913f8ed65a2d298f48c9161083891815260200190565b60405180910390a2505050610a5f565b61085c8284600101544261055e9190611a6f565b90505b81600d5410156108b15760405162461bcd60e51b815260206004820152601d60248201527f4f766572666c6f773a20746f74616c207374616b656420616d6f756e740000006044820152606401610606565b81600d60008282546108c39190611a6f565b90915550600090506108d58383611a6f565b905080600e5410156109295760405162461bcd60e51b815260206004820152601c60248201527f4f766572666c6f773a2072657761726420706f6f6c20616d6f756e74000000006044820152606401610606565b80600e600082825461093b9190611a6f565b9250508190555080600f60008282546109549190611a6f565b9091555050336000818152600a602090815260408083208984529091528082208281556001810183905560028101839055600301805460ff191690559054905163a9059cbb60e01b81526004810192909252602482018490526001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190611a4d565b5060405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2610a4233610bb2565b600003610a5a57336000908152600b60205260408120555b505050505b610a766001600080516020611af583398151915255565b50565b610a8161166f565b600455565b610a8e6116ca565b610a96611716565b336000908152600a602090815260408083208484529091529020600381015460ff16610afc5760405162461bcd60e51b8152602060048201526015602482015274155b9cdd185ad9481b9bdd081c995c5d595cdd1959605a1b6044820152606401610606565b6005548160020154610b0e9190611a3a565b421015610b5d5760405162461bcd60e51b815260206004820152601860248201527f436f6f6c646f776e20706572696f64206e6f74206f76657200000000000000006044820152606401610606565b80546001820154600090610b7790839061055e9042611a6f565b90506000610b858383611a6f565b905082600d6000828254610b999190611a6f565b9250508190555080600e600082825461093b9190611a6f565b6001600160a01b0381166000908152600b6020908152604080832054600a9092528220829190825b82811015610c0557600081815260208390526040902054610bfb9085611a3a565b9350600101610bda565b5091949350505050565b610c1761166f565b610c1f611747565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610c675750825b905060008267ffffffffffffffff166001148015610c845750303b155b905081158015610c92575080155b15610cb05760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610cda57845460ff60401b1916600160401b1785555b610ce3336117a7565b610ceb6117b8565b610cf36117c8565b600080546001600160a01b0319166001600160a01b038d1617815560018b9055600281905560035560048990556005889055610d3262278d008b611a82565b600655600787905560088690558315610d8557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b60006001548210610da557506000919050565b600060015483600854610db89190611aa4565b610dc29190611a82565b600754610dcf9190611a6f565b905060008111610e215760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420736c6173682061206e656761746976652076616c75650000006044820152606401610606565b92915050565b919050565b610e3461166f565b6001819055610e4662278d0082611a82565b60065550565b610e5461166f565b610c1f60006117d8565b60006001548210610e7757600454610e21906090611aa4565b600060015483600654610e8a9190611aa4565b610e9c90670de0b6b3a7640000611aa4565b610ea69190611a82565b905060006ec097ce7bc90715b34b9f10000000008283600454610ec99190611aa4565b610ed39190611aa4565b610edd9190611a82565b949350505050565b610eed61166f565b610c1f611849565b610efd61166f565b600555565b610f0a61166f565b6001600160a01b0381166000818152600c60209081526040808320805460ff19169055519182527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d91016106d0565b610f616116ca565b610f69611716565b60095460ff161580610f8a5750336000908152600c602052604090205460ff165b610fd65760405162461bcd60e51b815260206004820152601760248201527f41646472657373206e6f742077686974656c69737465640000000000000000006044820152606401610606565b600081116110175760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610606565b60025415611071576002548110156110715760405162461bcd60e51b815260206004820152601860248201527f416d6f756e742062656c6f77206d696e696d756d2063617000000000000000006044820152606401610606565b600354156110dd5760035461108533610bb2565b61108f9083611a3a565b11156110dd5760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742065786365656473206d6178696d756d206361700000000000006044820152606401610606565b336000818152600b602081815260408084208054825160808101845288815242818601908152818501888152606083018981528a8a52600a8852868a20858b528852958920835181559151600183015551600282015593516003909401805460ff191694151594909417909355958552929091528154909290919061116183611abb565b919050555082600d60008282546111789190611a3a565b925050819055506000670de0b6b3a7640000611195600154610e5e565b61119f9086611aa4565b6111a99190611a82565b905080600f60008282546111bd9190611a3a565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123d9190611a4d565b5060405184815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a2505050610a766001600080516020611af583398151915255565b61129561166f565b600855565b6112a261166f565b600255565b6112af61166f565b600081116112f35760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152606401610606565b80600f54600e546113049190611a6f565b10156113865760405162461bcd60e51b815260206004820152604560248201527f4e6f7420656e6f75676820746f6b656e7320696e2072657761726420706f6f6c60448201527f206166746572206163636f756e74696e6720666f722070656e64696e67207265606482015264776172647360d81b608482015260a401610606565b80600e60008282546113989190611a6f565b909155505060005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156113ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114129190611a4d565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020016106d0565b61144d61166f565b6009805460ff19166001179055565b60008061146883610e5e565b9050600061147584610d92565b90506000670de0b6b3a764000061148c8488611aa4565b6114969190611a82565b90506000670de0b6b3a76400006114ad8484611aa4565b6114b79190611a82565b9050866114c48382611a3a565b10156115285760405162461bcd60e51b815260206004820152602d60248201527f4f766572666c6f7720696e20746f74616c20776974686472617720616d6f756e60448201526c3a1031b0b631bab630ba34b7b760991b6064820152608401610606565b600081611535848a611a3a565b61153f9190611a6f565b905061154b8284611a6f565b600e54101561159c5760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e742072657761726420706f6f6c00000000000000006044820152606401610606565b979650505050505050565b6115af61166f565b6009805460ff19169055565b6115c361166f565b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916600190811790915591519182527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d91016106d0565b61162261166f565b600755565b61162f61166f565b600355565b61163c61166f565b6001600160a01b03811661166657604051631e4fbdf760e01b815260006004820152602401610606565b610a76816117d8565b336116a17f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610c1f5760405163118cdaa760e01b8152336004820152602401610606565b600080516020611af58339815191528054600119016116fc57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b6001600080516020611af583398151915255565b600080516020611ad58339815191525460ff1615610c1f5760405163d93c066560e01b815260040160405180910390fd5b61174f611892565b600080516020611ad5833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b6117af6118c2565b610a768161190b565b6117c06118c2565b610c1f611913565b6117d06118c2565b610c1f611934565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b611851611716565b600080516020611ad5833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611789565b600080516020611ad58339815191525460ff16610c1f57604051638dfc202b60e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610c1f57604051631afcd79f60e31b815260040160405180910390fd5b61163c6118c2565b61191b6118c2565b600080516020611ad5833981519152805460ff19169055565b6117026118c2565b80356001600160a01b0381168114610e2757600080fd5b60006020828403121561196557600080fd5b61196e8261193c565b9392505050565b60006020828403121561198757600080fd5b5035919050565b60008060008060008060c087890312156119a757600080fd5b6119b08761193c565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b600080604083850312156119eb57600080fd5b6119f48361193c565b946020939093013593505050565b60008060408385031215611a1557600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b80820180821115610e2157610e21611a24565b600060208284031215611a5f57600080fd5b8151801515811461196e57600080fd5b81810381811115610e2157610e21611a24565b600082611a9f57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610e2157610e21611a24565b600060018201611acd57611acd611a24565b506001019056fecd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220c2a8b4ce7472ff7df4f6e08ff78b765462fe46ae3e6daf6ad1312ed77e9df0e664736f6c63430008140033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
