/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountBelowMinCap",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountExceedsMaxCap",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotDepositZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CooldownPeriodNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientRewardPool",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NoStakedAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWhitelisted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "UnstakeAlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "UnstakeNotRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnstakeRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "WhitelistStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "calculateTax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "calculateTotalWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "calculateYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalStakedForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStakes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "requestUnstakeTime",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "unstakeRequested",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "yieldConstant",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "monthlyIncreasePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingSlashingPoint",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "stakingDuration",
            type: "uint32",
          },
        ],
        internalType: "struct Staking.Stake[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_stakingDuration",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_whitelistEnabled",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyIncreasePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthsInStakingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startingSlashingPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
    ],
    name: "updateCooldownPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
    ],
    name: "updateMaxCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minCap",
        type: "uint256",
      },
    ],
    name: "updateMinCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_monthlyIncreasePercentage",
        type: "uint256",
      },
    ],
    name: "updateMonthlyIncreasePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakingDuration",
        type: "uint256",
      },
    ],
    name: "updateStakingDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingSlashingPoint",
        type: "uint256",
      },
    ],
    name: "updateStartingSlashingPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_yieldConstant",
        type: "uint256",
      },
    ],
    name: "updateYieldConstant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakeCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "requestUnstakeTime",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "unstakeRequested",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "yieldConstant",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "monthlyIncreasePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingSlashingPoint",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "stakingDuration",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawRewardTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldConstant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e54806100206000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c806372f702f311610151578063b3c55721116100c3578063d6b0f48411610087578063d6b0f484146105db578063e43252d7146105e3578063e6d24866146105f6578063e81ba08014610609578063eded3fda1461061c578063f2fde38b1461062457600080fd5b8063b3c55721146104e8578063b5d5b5fa146104fb578063bcaabf6c146105ad578063cb43b2dd146105c0578063cdfb2b4e146105d357600080fd5b8063842e298111610115578063842e2981146104575780638456cb5914610477578063861f6bfd1461047f5780638ab1d681146104925780638da5cb5b146104a5578063a694fc3a146104d557600080fd5b806372f702f3146103ff578063757130791461042a5780637a65cd0b1461043d5780638005a7de14610446578063817b1cd21461044f57600080fd5b80633b42ffcf116101ea5780635b1d7086116101ae5780635b1d7086146103a85780635c975abb146103bb57806366666aa9146103d35780636c03d853146103db5780636f629512146103ee578063715018a6146103f757600080fd5b80633b42ffcf146103575780633f4ba83a1461036a5780633fa615b01461037257806351fb012d1461037b5780635678b0241461038857600080fd5b80632319b2561161023c5780632319b256146102f957806323548b8b1461030c57806329161479146103155780632e17de781461031e57806336c1105a14610331578063379607f51461034457600080fd5b806304646a491461027957806306c933d8146102955780630b7ead4a146102c857806316c621e0146102d157806322e76837146102e6575b600080fd5b61028260055481565b6040519081526020015b60405180910390f35b6102b86102a3366004611a34565b600c6020526000908152604090205460ff1681565b604051901515815260200161028c565b61028260075481565b6102e46102df366004611a4f565b610637565b005b6102826102f4366004611a68565b6106c8565b610282610307366004611aab565b610751565b61028260035481565b61028260085481565b6102e461032c366004611a4f565b6107dd565b6102e461033f366004611a4f565b61090d565b6102e4610352366004611a4f565b61091a565b610282610365366004611a34565b6109a8565b6102e4610a05565b61028260025481565b6009546102b89060ff1681565b610282610396366004611a34565b600b6020526000908152604090205481565b6102e46103b6366004611a4f565b610a17565b600080516020611ddf8339815191525460ff166102b8565b600e54610282565b6102e46103e9366004611ae5565b610a37565b61028260065481565b6102e4610be4565b600054610412906001600160a01b031681565b6040516001600160a01b03909116815260200161028c565b610282610438366004611b84565b610bf6565b61028260045481565b61028260015481565b600d54610282565b61046a610465366004611a34565b610c39565b60405161028c9190611bb6565b6102e4610daa565b6102e461048d366004611a4f565b610dba565b6102e46104a0366004611a34565b610dc7565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610412565b6102e46104e3366004611a4f565b610e1e565b6102e46104f6366004611a4f565b611176565b610566610509366004611c5f565b600a602090815260009283526040808420909152908252902080546001820154600283015460038401546004850154600590950154939463ffffffff808516956401000000008604821695600160401b900460ff16949392911688565b6040805198895263ffffffff97881660208a0152958716958801959095529215156060870152608086019190915260a085015260c08401521660e08201526101000161028c565b6102e46105bb366004611a4f565b611183565b6102e46105ce366004611a4f565b611190565b6102e4611249565b6102e4611260565b6102e46105f1366004611a34565b611274565b6102e4610604366004611a4f565b6112d3565b6102e4610617366004611a4f565b6112e0565b600f54610282565b6102e4610632366004611a34565b6112ed565b61063f61132d565b80600003610660576040516330d6375d60e11b815260040160405180910390fd5b80600e60008282546106729190611c9f565b909155505060005461068f906001600160a01b0316333084611388565b60405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020015b60405180910390a250565b6000806106d6878785610751565b905060006106e688878787610bf6565b90506000670de0b6b3a76400006106fd848c611cb2565b6107079190611cdf565b90506000670de0b6b3a764000061071e8484611cb2565b6107289190611cdf565b9050600081610737848e611c9f565b6107419190611cf3565b9c9b505050505050505050505050565b600081841061076c57610765836090611cb2565b90506107d6565b6000828560065461077d9190611cb2565b61078f90670de0b6b3a7640000611cb2565b6107999190611cdf565b905060006ec097ce7bc90715b34b9f1000000000826107b88188611cb2565b6107c29190611cb2565b6107cc9190611cdf565b92506107d6915050565b9392505050565b6107e56113f5565b336000908152600a602090815260408083208484529091528120805490910361082157604051631704edbb60e01b815260040160405180910390fd5b6001810154600160401b900460ff161561084e57604051634b8cc7d360e11b815260040160405180910390fd5b6005810154600182015461086b9163ffffffff9081169116611d06565b63ffffffff164210156108e757600181018054600160401b68ffffffffff00000000199091166401000000004263ffffffff160260ff60401b191617179055805460405190815233907f828764c21e74c28710e19919735825aba966621c95cbd913f8ed65a2d298f48c9060200160405180910390a2506108f3565b6108f1338361142d565b505b61090a6001600080516020611dff83398151915255565b50565b61091561132d565b600455565b6109226113f5565b336000908152600a6020908152604080832084845290915290206001810154600160401b900460ff166109685760405163777c843f60e11b815260040160405180910390fd5b60055460018201546109889190640100000000900463ffffffff16611c9f565b4210156108e7576040516352c459f960e01b815260040160405180910390fd5b6001600160a01b0381166000908152600b6020908152604080832054600a9092528220829190825b828110156109fb576000818152602083905260409020546109f19085611c9f565b93506001016109d0565b5091949350505050565b610a0d61132d565b610a15611620565b565b610a1f61132d565b6001819055610a3162278d0082611cdf565b60065550565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610a7d5750825b905060008267ffffffffffffffff166001148015610a9a5750303b155b905081158015610aa8575080155b15610ac65760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610af057845460ff60401b1916600160401b1785555b610af933611680565b610b01611691565b610b096116a1565b610b128f6112ed565b8d6000806101000a8154816001600160a01b0302191690836001600160a01b031602179055508c63ffffffff166001819055508b6004819055508a60058190555062278d008d610b629190611d2a565b63ffffffff1660065560078a90556008899055600288905560038790556009805460ff19168715151790558315610bd357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050505050505050565b610bec61132d565b610a1560006116b1565b6000818510610c0757506000610c31565b600082610c148787611cb2565b610c1e9190611cdf565b610c289085611cf3565b9150610c319050565b949350505050565b6001600160a01b0381166000908152600b60205260408120546060918167ffffffffffffffff811115610c6e57610c6e611d4d565b604051908082528060200260200182016040528015610cdd57816020015b604080516101008101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201528252600019909201910181610c8c5790505b50905060005b82811015610da2576001600160a01b0385166000908152600a6020908152604080832084845282529182902082516101008101845281548152600182015463ffffffff808216948301949094526401000000008104841694820194909452600160401b90930460ff161515606084015260028101546080840152600381015460a0840152600481015460c0840152600501541660e08201528251839083908110610d8f57610d8f611d63565b6020908102919091010152600101610ce3565b509392505050565b610db261132d565b610a15611722565b610dc261132d565b600555565b610dcf61132d565b6001600160a01b0381166000818152600c60209081526040808320805460ff19169055519182527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d91016106bd565b610e266113f5565b610e2e61176b565b60095460ff168015610e505750336000908152600c602052604090205460ff16155b15610e6e57604051630b094f2760e31b815260040160405180910390fd5b80600003610e8f57604051631f2a200560e01b815260040160405180910390fd5b6000600254118015610ea2575060025481105b15610ec05760405163697fb45960e01b815260040160405180910390fd5b6000600354118015610ee55750600354610ed9336109a8565b610ee39083611c9f565b115b15610f035760405163fef49f1960e01b815260040160405180910390fd5b6000600b6000336001600160a01b03166001600160a01b031681526020019081526020016000205490506040518061010001604052808381526020014263ffffffff168152602001600063ffffffff16815260200160001515815260200160045481526020016008548152602001600754815260200160015463ffffffff16815250600a6000336001600160a01b03166001600160a01b0316815260200190815260200160002060008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548163ffffffff021916908363ffffffff16021790555060608201518160010160086101000a81548160ff0219169083151502179055506080820151816002015560a0820151816003015560c0820151816004015560e08201518160050160006101000a81548163ffffffff021916908363ffffffff160217905550905050600b6000336001600160a01b03166001600160a01b0316815260200190815260200160002060008154809291906110b190611d79565b919050555081600d60008282546110c89190611c9f565b9091555050600154600454670de0b6b3a7640000916110e79181610751565b6110f19084611cb2565b6110fb9190611cdf565b600f600082825461110c9190611c9f565b9091555050600054611129906001600160a01b0316333085611388565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a25061090a6001600080516020611dff83398151915255565b61117e61132d565b600855565b61118b61132d565b600255565b61119861132d565b806000036111b957604051631f2a200560e01b815260040160405180910390fd5b80600f54600e546111ca9190611cf3565b10156111e957604051633270436b60e01b815260040160405180910390fd5b80600e60008282546111fb9190611cf3565b9091555050600054611217906001600160a01b0316338361179c565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020016106bd565b61125161132d565b6009805460ff19166001179055565b61126861132d565b6009805460ff19169055565b61127c61132d565b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916600190811790915591519182527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d91016106bd565b6112db61132d565b600755565b6112e861132d565b600355565b6112f561132d565b6001600160a01b03811661132457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61090a816116b1565b3361135f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610a155760405163118cdaa760e01b815233600482015260240161131b565b6040516001600160a01b0384811660248301528381166044830152606482018390526113ef9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506117d2565b50505050565b600080516020611dff83398151915280546001190161142757604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b6001600160a01b0382166000908152600a60209081526040808320848452909152812080546001820154919290916114909083906114719063ffffffff1642611cf3565b600286015460038701546004880154600589015463ffffffff166106c8565b9050600061149e8383611cf3565b905082600d60008282546114b29190611cf3565b9250508190555080600e60008282546114cb9190611cf3565b9250508190555080600f60008282546114e49190611cf3565b90915550506001600160a01b038087166000908152600a60209081526040808320898452909152812081815560018101805468ffffffffffffffffff19169055600281018290556003810182905560048101829055600501805463ffffffff19169055546115549116878461179c565b856001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58360405161158f91815260200190565b60405180910390a2856001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040516115d291815260200190565b60405180910390a26115e3866109a8565b600003611604576001600160a01b0386166000908152600b60205260408120555b505050505050565b6001600080516020611dff83398151915255565b611628611835565b600080516020611ddf833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b611688611865565b61090a816118ae565b611699611865565b610a156118b6565b6116a9611865565b610a156118d7565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61172a61176b565b600080516020611ddf833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611662565b600080516020611ddf8339815191525460ff1615610a155760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b038381166024830152604482018390526117cd91859182169063a9059cbb906064016113bd565b505050565b60006117e76001600160a01b038416836118df565b9050805160001415801561180c57508080602001905181019061180a9190611d92565b155b156117cd57604051635274afe760e01b81526001600160a01b038416600482015260240161131b565b600080516020611ddf8339815191525460ff16610a1557604051638dfc202b60e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610a1557604051631afcd79f60e31b815260040160405180910390fd5b6112f5611865565b6118be611865565b600080516020611ddf833981519152805460ff19169055565b61160c611865565b60606118ed838360006118f6565b90505b92915050565b60608147101561191b5760405163cd78605960e01b815230600482015260240161131b565b600080856001600160a01b031684866040516119379190611daf565b60006040518083038185875af1925050503d8060008114611974576040519150601f19603f3d011682016040523d82523d6000602084013e611979565b606091505b5091509150611989868383611993565b9695505050505050565b6060826119a8576119a3826119ef565b6107d6565b81511580156119bf57506001600160a01b0384163b155b156119e857604051639996b31560e01b81526001600160a01b038516600482015260240161131b565b50806107d6565b8051156119ff5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b0381168114611a2f57600080fd5b919050565b600060208284031215611a4657600080fd5b6118ed82611a18565b600060208284031215611a6157600080fd5b5035919050565b60008060008060008060c08789031215611a8157600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b600080600060608486031215611ac057600080fd5b505081359360208301359350604090920135919050565b801515811461090a57600080fd5b6000806000806000806000806000806101408b8d031215611b0557600080fd5b611b0e8b611a18565b9950611b1c60208c01611a18565b985060408b013563ffffffff81168114611b3557600080fd5b975060608b0135965060808b0135955060a08b0135945060c08b0135935060e08b013592506101008b013591506101208b0135611b7181611ad7565b809150509295989b9194979a5092959850565b60008060008060808587031215611b9a57600080fd5b5050823594602084013594506040840135936060013592509050565b602080825282518282018190526000919060409081850190868401855b82811015611c52578151805185528681015163ffffffff908116888701528682015116868601526060808201511515908601526080808201519086015260a0808201519086015260c0808201519086015260e09081015190611c3c8187018363ffffffff169052565b5050610100939093019290850190600101611bd3565b5091979650505050505050565b60008060408385031215611c7257600080fd5b611c7b83611a18565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156118f0576118f0611c89565b80820281158282048414176118f0576118f0611c89565b634e487b7160e01b600052601260045260246000fd5b600082611cee57611cee611cc9565b500490565b818103818111156118f0576118f0611c89565b63ffffffff818116838216019080821115611d2357611d23611c89565b5092915050565b600063ffffffff80841680611d4157611d41611cc9565b92169190910492915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611d8b57611d8b611c89565b5060010190565b600060208284031215611da457600080fd5b81516107d681611ad7565b6000825160005b81811015611dd05760208186018101518583015201611db6565b50600092019182525091905056fecd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a264697066735822122019bdda62e7ae93f0fc6b4267c41659238a57a73f427efac409b6a6729659d4db64736f6c63430008140033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
