/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MerkleAirdrop,
  MerkleAirdropInterface,
} from "../../../contracts/airdrop.sol/MerkleAirdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cycleIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "AirdropCycleCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensDeposited",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "airdropCycles",
    outputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cycleIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "checkClaimable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cycleIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "createAirdropCycle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dd4380380610dd483398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b610cc1806101136000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063972346f111610071578063972346f114610146578063b69d1a081461016e578063d80e720d14610181578063dd49756e14610194578063f2fde38b146101a7578063fc0c546a146101ba57600080fd5b8063315a095d146100ae5780633e59cca9146100c3578063715018a6146100eb578063873f6f9e146100f35780638da5cb5b14610121575b600080fd5b6100c16100bc366004610a5f565b6101cd565b005b6100d66100d1366004610ae0565b610272565b60405190151581526020015b60405180910390f35b6100c1610417565b6100d6610101366004610b48565b600360209081526000928352604080842090915290825290205460ff1681565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e2565b610159610154366004610a5f565b61042b565b604080519283529015156020830152016100e2565b6100c161017c366004610b74565b61045c565b6100c161018f366004610a5f565b61076d565b6100c16101a2366004610a5f565b610841565b6100c16101b5366004610bc7565b610910565b60015461012e906001600160a01b031681565b6101d561094b565b60015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a9190610be2565b61026f5760405162461bcd60e51b815260040161026690610c04565b60405180910390fd5b50565b60025460009086106102bc5760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840c6f2c6d8ca40d2dcc8caf606b1b6044820152606401610266565b600286815481106102cf576102cf610c33565b600091825260209091206001600290920201015460ff166103325760405162461bcd60e51b815260206004820152601b60248201527f41697264726f70206379636c65206973206e6f742061637469766500000000006044820152606401610266565b6040516bffffffffffffffffffffffff19606087901b1660208201526034810185905260009060540160405160208183030381529060405280519060200120905060006103d985858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600280549092508c915081106103c1576103c1610c33565b90600052602060002090600202016000015484610978565b905080801561040b575060008881526003602090815260408083206001600160a01b038b16845290915290205460ff16155b98975050505050505050565b61041f61094b565b610429600061098e565b565b6002818154811061043b57600080fd5b60009182526020909120600290910201805460019091015490915060ff1682565b60025484106104a35760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840c6f2c6d8ca40d2dcc8caf606b1b6044820152606401610266565b600084815260036020908152604080832033845290915290205460ff161561051b5760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616c726561647920636c61696d656420696e2074686973206044820152646379636c6560d81b6064820152608401610266565b6002848154811061052e5761052e610c33565b600091825260209091206001600290920201015460ff166105915760405162461bcd60e51b815260206004820152601b60248201527f41697264726f70206379636c65206973206e6f742061637469766500000000006044820152606401610266565b6040516bffffffffffffffffffffffff193360601b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506106358383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060028054909250899150811061061d5761061d610c33565b90600052602060002090600202016000015483610978565b6106785760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21036b2b935b63290383937b7b360611b6044820152606401610266565b600085815260036020908152604080832033808552925291829020805460ff1916600190811790915554915163a9059cbb60e01b81526004810191909152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190610be2565b6107315760405162461bcd60e51b815260040161026690610c04565b60405184815233907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4309060200160405180910390a25050505050565b61077561094b565b60408051808201909152818152600160208201818152600280548084018255600082905293517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9482029485015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf909301805460ff19169315159390931790925590547f7f78dff38800845b30d90c3b43f18b940d783543d6bc0eeb68bf082fd69b18169161082691610c5f565b6040805191825260208201849052015b60405180910390a150565b61084961094b565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156108a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c49190610be2565b6108e05760405162461bcd60e51b815260040161026690610c04565b6040518181527f77acf75e237f9aae98f997395832d522bdb695e4a9bd07704936aa889a3667d190602001610836565b61091861094b565b6001600160a01b03811661094257604051631e4fbdf760e01b815260006004820152602401610266565b61026f8161098e565b6000546001600160a01b031633146104295760405163118cdaa760e01b8152336004820152602401610266565b60008261098585846109de565b14949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b8451811015610a2357610a0f82868381518110610a0257610a02610c33565b6020026020010151610a2d565b915080610a1b81610c72565b9150506109e3565b5090505b92915050565b6000818310610a49576000828152602084905260409020610a58565b60008381526020839052604090205b9392505050565b600060208284031215610a7157600080fd5b5035919050565b80356001600160a01b0381168114610a8f57600080fd5b919050565b60008083601f840112610aa657600080fd5b50813567ffffffffffffffff811115610abe57600080fd5b6020830191508360208260051b8501011115610ad957600080fd5b9250929050565b600080600080600060808688031215610af857600080fd5b85359450610b0860208701610a78565b935060408601359250606086013567ffffffffffffffff811115610b2b57600080fd5b610b3788828901610a94565b969995985093965092949392505050565b60008060408385031215610b5b57600080fd5b82359150610b6b60208401610a78565b90509250929050565b60008060008060608587031215610b8a57600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610baf57600080fd5b610bbb87828801610a94565b95989497509550505050565b600060208284031215610bd957600080fd5b610a5882610a78565b600060208284031215610bf457600080fd5b81518015158114610a5857600080fd5b602080825260159082015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610a2757610a27610c49565b600060018201610c8457610c84610c49565b506001019056fea26469706673582212200778db4443988ffddd87adfe0cfdaff2638a6a4ed13f8ec7518c69993f41b39064736f6c63430008140033";

type MerkleAirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleAirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleAirdrop__factory extends ContractFactory {
  constructor(...args: MerkleAirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, overrides || {}) as Promise<
      MerkleAirdrop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MerkleAirdrop__factory {
    return super.connect(runner) as MerkleAirdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleAirdropInterface {
    return new Interface(_abi) as MerkleAirdropInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MerkleAirdrop {
    return new Contract(address, _abi, runner) as unknown as MerkleAirdrop;
  }
}
